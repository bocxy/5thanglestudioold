{"version":3,"sources":["components/CardBox/index.js","services/grapgql/query.js","services/grapgql/mutation.js","../node_modules/@material-ui/lab/esm/internal/svg-icons/createSvgIcon.js","components/snackbar/index.js","app/routes/AllLeads/StatusDropDown.js","priceformat/price.js","app/routes/AllLeads/CardLayout/index.js","components/selects/multi/MultipleSelect.js","app/routes/AllLeads/cardsTable/enhanced/CardsTable.js","../node_modules/@material-ui/lab/esm/internal/svg-icons/Close.js","components/AlertBox/alertbox.js","../node_modules/@material-ui/icons/Info.js","../node_modules/@material-ui/icons/CheckCircle.js","../node_modules/@material-ui/icons/Error.js","../node_modules/@material-ui/core/esm/CircularProgress/CircularProgress.js","../node_modules/@material-ui/core/esm/internal/svg-icons/ArrowDownward.js","../node_modules/@material-ui/core/esm/TableSortLabel/TableSortLabel.js","tables/enhanced/EnhancedTable.js","tables/index.js","app/routes/AllLeads/index.js"],"names":["react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","CardBox","_ref","heading","children","styleName","cardStyle","childrenStyle","headerOutside","headingStyle","a","createElement","className","concat","length","defaultProps","gql","_templateObject","GET_CUSTOMER_ID_DATA","MASTER_SERVICES","CUSTOMER_PROJECT_QUOTES","CUSTOMER_BY_PROJECT_ID","COMMUNICATION_BY_PROJECT","ALLMASTEREVENT","GETEPROJECTEVENT","FINANCE_CUSTOMER_DATA","_templateObject2","ADMINACCESSCUSTOMERDATA","_templateObject3","CUSTOMERDETAILONLY","SALESPERSON","CONVERTPROJECT","_templateObject4","MASTER_COUNTRY_CODE","CREATE_CUSTOMER","CREATE_PROJECT","STATUS_UPDATE_IN_PROJECT","STATUS_UPDATE_IN_PROJECT_AXIOS","UPDATE_CUSTOMER","UPDATE_PROJECT_FINALQUOTE","CREATE_COMMUNICATION","PROJECTQUOTEUPDATE","PDFGENERATER","PROJECTEVENTSERVICE","FOLLOWUPDATE","d","__webpack_exports__","createSvgIcon","_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_1___default","_material_ui_core_SvgIcon__WEBPACK_IMPORTED_MODULE_2__","path","displayName","Component","memo","forwardRef","props","ref","Object","muiName","CustomizedSnackbars","_material_ui_core_Snackbar__WEBPACK_IMPORTED_MODULE_1__","_material_ui_lab_Alert__WEBPACK_IMPORTED_MODULE_2__","_material_ui_core_styles__WEBPACK_IMPORTED_MODULE_3__","Alert","assign","elevation","variant","useStyles","makeStyles","theme","root","width","& > * + *","marginTop","spacing","classes","handleClose","snackBarClose","open","autoHideDuration","anchorOrigin","vertical","horizontal","onClose","severity","color","message","StatusDropDown","_this","_home_crayond_Documents_FAS_photo_studio_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","this","_home_crayond_Documents_FAS_photo_studio_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__","_home_crayond_Documents_FAS_photo_studio_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__","call","handleChange","name","event","setState","_home_crayond_Documents_FAS_photo_studio_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","target","value","state","currency","label","LeadStatus","undefined","statusValue","status","console","log","react__WEBPACK_IMPORTED_MODULE_6___default","_material_ui_core__WEBPACK_IMPORTED_MODULE_7__","item","xs","_material_ui_core_TextField__WEBPACK_IMPORTED_MODULE_8__","id","select","style","height","onChange","SelectProps","native","disabled","margin","map","option","key","numberFormat","Intl","NumberFormat","format","split","CardLayout","names","MultipleSelect","keys","handleClickOpen","document","getElementById","blur","handleBlur","e","_this2","react_default","FormControl","minWidth","maxWidth","InputLabel","htmlFor","Select","multiple","title","onBlur","input","Input","defineProperty","renderValue","selected","join","MenuProps","MenuItem","ListItemAvatar","Avatar","Image_default","Checkbox","checked","indexOf","ListItemText","primary","Dialog","aria-labelledby","aria-describedby","DialogTitle","fontSize","DialogContent","DialogContentText","Fragment","fontWeight","DialogActions","Button","onClick","autoFocus","React","CardsTable","context","classCallCheck","possibleConstructorReturn","getPrototypeOf","handleRequestSort","property","orderBy","order","data","sort","b","handleSelectAllClick","handleKeyDown","keycode","handleClick","selectedIndex","newSelected","slice","handleChangePage","page","handleChangeRowsPerPage","rowsPerPage","isSelected","_this$state","datas","stylesdropdown","overflowY","cardsTableHeight","Table","TableHead","TableRow","TableCell","colSpan","align","display","alignItems","NotificationsActive_default","tableHeading","TableBody","index","_n$serial_no","Notifications_default","serial_no","toUpperCase","fontFamily","navlinks","mobile","stylesdropdown2","textAlign","history","push","buttonName","overflow","multi_MultipleSelect","JSON","parse","leadId","handleChangeSelect","TableFooter","TablePagination","count","rowsPerPageOptions","rows","onChangePage","onChangeRowsPerPage","top","right","position","justifyContent","NotificationsOff_default","_createSvgIcon__WEBPACK_IMPORTED_MODULE_1__","AlertDialog","_material_ui_core_Button__WEBPACK_IMPORTED_MODULE_1__","_material_ui_core_Dialog__WEBPACK_IMPORTED_MODULE_2__","_material_ui_core_DialogContent__WEBPACK_IMPORTED_MODULE_3__","_material_ui_core_DialogContentText__WEBPACK_IMPORTED_MODULE_4__","_material_ui_icons_Info__WEBPACK_IMPORTED_MODULE_5__","_material_ui_icons_Info__WEBPACK_IMPORTED_MODULE_5___default","_material_ui_icons_CheckCircle__WEBPACK_IMPORTED_MODULE_6__","_material_ui_icons_CheckCircle__WEBPACK_IMPORTED_MODULE_6___default","_material_ui_icons_Error__WEBPACK_IMPORTED_MODULE_8__","_material_ui_icons_Error__WEBPACK_IMPORTED_MODULE_8___default","alertOpen","padding","container","alertStatus","alertContent","twoBtn","alertSure","background","alertCancel","alertClose","_interopRequireDefault","exports","default","_react","_default","_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_2__","react__WEBPACK_IMPORTED_MODULE_2___default","clsx__WEBPACK_IMPORTED_MODULE_4__","_styles_withStyles__WEBPACK_IMPORTED_MODULE_5__","_utils_capitalize__WEBPACK_IMPORTED_MODULE_6__","easeOut","t","min","max","Math","CircularProgress","_props$color","_props$disableShrink","disableShrink","_props$size","size","_props$thickness","thickness","_props$value","_props$variant","other","circleStyle","rootStyle","rootProps","circumference","PI","strokeDasharray","toFixed","round","strokeDashoffset","transform","indeterminate","static","role","svg","viewBox","SIZE","circle","circleDisableShrink","circleIndeterminate","circleStatic","cx","cy","r","fill","strokeWidth","transition","transitions","create","animation","colorPrimary","palette","main","colorSecondary","secondary","stroke","@keyframes circular-rotate","100%","@keyframes circular-dash","0%","50%","flip","ArrowDownward","TableSortLabel_TableSortLabel","_props$active","active","_props$direction","direction","_props$hideSortIcon","hideSortIcon","_props$IconComponent","IconComponent","objectWithoutProperties","ButtonBase","esm_extends","clsx_m","component","disableRipple","icon","capitalize","esm_TableSortLabel_TableSortLabel","withStyles","cursor","flexDirection","&:focus","text","&:hover","& $icon","opacity","&$active","&& $icon","marginRight","marginLeft","duration","shorter","userSelect","iconDirectionDesc","iconDirectionAsc","_React$Component","paidAlertClose","handleSave","_this$state$advance","_this$state$descripti","paidInfo","advance","trim","advanceError","description","descriptionError","unmounted","objectSpread2","params","paidDetails","advanceReceiveDate","Date","axios","GRAPHQL_URL","query","variables","then","res","advance_paid_status_value","catch","error","advanceChange","_this$props$paidDetai","Number","totalAmd","totalAmount","advancePaid","advanceErrorMsg","descriptionErrorMsg","inherits","createClass","nextProps","_this$props$paidDetai2","_this$state2","_this$state3","_this$state4","_this$state5","_this$state6","Grid","lg","md","TextField","type","helperText","autoComplete","onInput","parseInt","toString","multiline","inputProps","maxLength","EnhancedTable","_this3","off_set","offset","asyncToGenerator","regenerator_default","mark","_callee","refetch","leadData","payment_data","_leadData$projectQuot","authContext","wrap","_context","prev","next","projectQuoteByFinalQuoteId","totalAmt","alertOpenBox","content","abrupt","paidAlertOpen","client","mutate","mutation","statusData","AdminStatus","prevStatus","nextStatus","obj","msg_info","uuidv4","sender_id","user","profile_id","created_at","updated_at","project_id","mode","is_internal","snackBarOpen","msg_res","quoteFinalMethod","followUpMethod","onHoldMethod","delayedMethod","err","stop","_x","_x2","_x3","_x4","_x5","apply","arguments","sendProjectId","listEventType","eventTypeValue","_eventTypeValue","setValue","_data$masterEventByEv","_data$masterEventByEv2","masterEventByEventId","eventName","statusCancel","btnAction","stringify","cancelStatusData","total","statusSort","orderByFilter","filterSearch","FinanceLeadStatus","totalCount","customerStatus","toConsumableArray","alertAction","_this4","contextValue","_this$state7","EnhancedTable_AlertDialog","backgroundColor","user_role","react_apollo_esm","fetchPolicy","onCompleted","handleTotalCount","allProjects","first","search","_ref2","_data$allProjects","loading","nodes","row","_row$customerByCustom2","_row$customerByCustom3","_row$customerByCustom4","_row$customerByCustom5","_row$customerByCustom6","_row$projectQuoteByFi5","_row$projectQuoteByFi6","_row$projectQuoteByFi7","_row$projectQuoteByFi8","_row$projectQuoteByFi9","_row$projectQuoteByFi10","_row$projectQuoteByFi11","_row$projectQuoteByFi12","_row$projectQuoteByFi13","_row$customerByCustom7","_row$customerByCustom8","_row$customerByCustom","customerByCustomerId","serialNo","moment","createdAt","projectEventsByCustomerId","_row$projectQuoteByFi","_row$projectQuoteByFi2","_row$projectQuoteByFi3","_row$projectQuoteByFi4","advanceReceived","see","required","class","followUpDate","_ref3","_data$allProjects2","_row$customerByCustom10","_row$customerByCustom11","_row$customerByCustom12","_row$customerByCustom13","_row$customerByCustom14","_row$projectQuoteByFi14","_row$projectQuoteByFi15","_row$customerByCustom15","_row$customerByCustom16","_row$customerByCustom9","paddingRight","paddingTop","contextType","AuthContext","withApollo","withRouter","Tables","_useState","useState","_useState2","slicedToArray","setSearch","_useState3","_useState4","setPage","_useState5","_useState6","_useState7","_useState8","setOffset","_useState9","_useState10","setTotalCount","IntlMessages","enhanced_EnhancedTable","pages","AllLeads","quoteFinal","API_URL","quotefinal_res","_quotefinal_res$data","info","_callee2","followUpData","_context2","follow_res","_follow_res$data","_callee3","onHoldData","_context3","onhold_res","_onhold_res$data","_callee4","delayedData","_context4","delay_res","_delay_res$data","alertTwoBtn","snackbarColor","snackbarMessage","dataFour","dataFive","LeadStatusOne","LeadStatusTwo","_authContext$user","snackbar","alertbox","tables","justify"],"mappings":"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","file":"static/js/6.c6b3f91a.chunk.js","sourcesContent":["import React from 'react';\n\nconst CardBox = ({heading, children, styleName, cardStyle, childrenStyle, headerOutside,headingStyle}) => {\n\n  return (\n    <div className={`${styleName}`}>\n      {headerOutside &&\n      <div className=\"jr-entry-header\">\n        <h3 className=\"entry-heading\">{heading}</h3>\n        {children.length > 1 && <div className=\"entry-description\">{children[0]}</div>}\n      </div>\n      }\n\n      <div className={`jr-card ${cardStyle}`}>\n        {!headerOutside &&\n        ( heading &&\n          <div className={`jr-card-header ${headingStyle}`}>\n            <h3 className=\"card-heading\">{heading}</h3>\n            {children.length > 1 && <div className=\"sub-heading\">{children[0]}</div>}\n          </div>\n        )}\n        <div className={`jr-card-body ${childrenStyle}`}>\n          {children.length > 1 ? children[1] : children}\n        </div>\n        <div className={`jr-card-body ${childrenStyle}`}>\n          {children.length > 1 ? children[2] : \"\"}\n        </div>\n      </div>\n    </div>\n  )\n};\n\nexport default CardBox;\n\nCardBox.defaultProps = {\n  cardStyle: '',\n  headingStyle:'',\n  childrenStyle: '',\n  styleName: 'col-lg-6 col-sm-12'\n};","import gql from 'graphql-tag';\n\nconst ALLCUSTOMERS = gql`\nquery MyQuery($profile_id: UUID, $first: Int!, $offset: Int!) {\n  allCustomers(filter: {updatedBy: {equalTo: $profile_id}}, offset: $offset, first: $first, orderBy: CREATED_AT_DESC) {\n    nodes {\n      email\n      id\n      mobile\n      name\n      createdAt\n      serialNo\n      projectsByCustomerId {\n        nodes {\n          status\n          projectQuoteByFinalQuoteId {\n            totalAmt\n          }\n          id\n          customerByCustomerId {\n            projectEventsByCustomerId {\n              nodes {\n                masterEventByEventId {\n                  eventName\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n    totalCount\n  }\n}\n`;\nconst GET_CUSTOMER_ID_DATA = `\nquery MyQuery($id: UUID!) {\n  customerById(id: $id) {\n    email\n    mobile\n    id\n    name\n    eventAddress\n    shootDetails\n    createdAt\n    source\n    serialNo\n    projectsByCustomerId {\n      nodes {\n        id\n        status\n        customerByCustomerId {\n          projectEventsByCustomerId(filter: {isActive: {equalTo: true}}, orderBy: CREATED_AT_ASC) {\n            nodes {\n              id\n              isActive\n              eventId\n              eventStartDate\n              eventStartTime\n              eventEndDate\n              eventEndTime\n              masterEventByEventId {\n                id\n                eventName\n              }\n              brideName\n              groomName\n              location\n              venue\n              noOfPeople\n              otherFunctionDetails\n              typeOfWedding\n            }\n          }\n        }\n      }\n    }\n    facebookId\n    instaId\n    salesPerson\n    whatsappNumber\n    followUpDate\n  }\n}\n\n`;\nconst MASTER_SERVICES = `\nquery MyQuery {\n  allMasterServices {\n    nodes {\n      id\n      isActive\n      price\n      tax\n      serviceName\n      description\n      duration\n    }\n  }\n}\n`;\nconst CUSTOMER_PROJECT_QUOTES =`\nquery MyQuery($id: UUID!) {\n  customerById(id: $id) {\n    projectsByCustomerId {\n      nodes {\n        id\n        finalQuoteId\n        projectQuotesByProjectId(orderBy: CREATED_AT_DESC) {\n          nodes {\n            id\n            isActive\n            netAmt\n            projectId\n            tax\n            totalAmt\n            baseAmt\n            discount\n            balance\n            advanceReceived\n            advanceReceiveDate\n            adjustmentAmt\n            createdAt\n            eventServicesByProjectQuoteId(orderBy: ORDER_DATA_ASC) {\n              nodes {\n                projectEventId\n                quantity\n                isDeliverable\n                servicePrice\n                masterServiceByServiceId {\n                  id\n                  serviceName\n                  price\n                  tax\n                  description\n                  duration\n                }\n              }\n            }\n            projectByProjectId {\n              customerByCustomerId {\n                projectEventsByCustomerId(orderBy: CREATED_AT_ASC) {\n                  nodes {\n                    id\n                    masterEventByEventId {\n                      id\n                      eventName\n                    }\n                  }\n                }\n              }\n            }\n          }\n          totalCount\n        }\n      }\n    }\n  }\n}\n\n`;\nconst CUSTOMER_BY_PROJECT_ID = `\nquery MyQuery($id: UUID!) {\n  customerById(id: $id) {\n    projectsByCustomerId {\n      nodes {\n        id\n      }\n    }\n  }\n}\n`;\nconst COMMUNICATION_BY_PROJECT = `\nquery MyQuery($id: UUID!) {\n  projectById(id: $id) {\n    communicationsByProjectId(orderBy: CREATED_AT_DESC) {\n      nodes {\n        id\n        message\n        senderId\n        createdAt\n        userProfileByCreatedBy {\n          name\n        }\n        isInternal\n      }\n    }\n  }\n}\n`;\nconst ALLMASTEREVENT = `\nquery MyQuery {\n  allMasterEvents {\n    nodes {\n      id\n      eventName\n    }\n  }\n}\n`;\nconst GETEPROJECTEVENT = `\nquery MyQuery($id: UUID!) {\n  customerById(id: $id) {\n    projectEventsByCustomerId(filter: {isActive: {equalTo: true}}, orderBy: CREATED_AT_ASC) {\n      nodes {\n        id\n        masterEventByEventId {\n          id\n          eventName\n        }\n      }\n    }\n  }\n}\n\n\n`;\nconst FINANCE_CUSTOMER_DATA = gql`\nquery MyQuery($first: Int!, $offset: Int!,$search:String,$orderBy:[ProjectsOrderBy!]) {\n  allProjects(first: $first, offset: $offset, orderBy: $orderBy, filter: {status: {in: [QUOTECONFIRMED, ADVANCEDPAID]}, customerByCustomerId: {or: [{name: {includes: $search}}, {mobile: {includes: $search}}, {serialNo: {includes: $search}}]}}) {\n    nodes {\n      createdAt\n      customerByCustomerId {\n        mobile\n        name\n        id\n        serialNo\n        projectEventsByCustomerId(filter: {isActive: {equalTo: true}}) {\n          nodes {\n            masterEventByEventId {\n              eventName\n            }\n          }\n        }\n        followUpDate\n      }\n      status\n      projectQuoteByFinalQuoteId {\n        totalAmt\n        advanceReceived\n        description\n        isPaymentCompleted\n        id\n      }\n      id\n    }\n    totalCount\n  }\n}\n`;\nconst ADMINACCESSCUSTOMERDATA =gql`\nquery MyQuery($first: Int!, $offset: Int!,$search:String,$orderBy:[ProjectsOrderBy!]) {\n  allProjects(first: $first, offset: $offset, orderBy: $orderBy,filter: {customerByCustomerId: {or: [{name: {includes: $search}}, {mobile: {includes: $search}}, {serialNo: {includes: $search}}]}}) {\n    nodes {\n      createdAt\n      customerByCustomerId {\n        mobile\n        name\n        id\n        serialNo\n        projectEventsByCustomerId(filter: {isActive: {equalTo: true}}) {\n          nodes {\n            masterEventByEventId {\n              eventName\n            }\n          }\n        }\n        followUpDate\n      }\n      status\n      projectQuoteByFinalQuoteId {\n        totalAmt\n        advanceReceived\n        description\n        isPaymentCompleted\n        id\n      }\n      id\n    }\n    totalCount\n  }\n}\n`;\nconst CUSTOMERDETAILONLY =  `\nquery MyQuery($id: UUID!) {\n  customerById(id: $id) {\n    email\n    mobile\n    name\n    serialNo\n    projectsByCustomerId {\n      nodes {\n        status\n      }\n    }\n  }\n}\n`;\nconst ALLCUSTOMERCOUNT = `\nquery MyQuery {\n  allCustomers {\n    totalCount\n  }\n}\n`;\nconst ADVANCEPAIDPROJECTCOUNT = `\nquery MyQuery {\n  allProjects(filter: {status: {equalTo: ADVANCEDPAID}}) {\n    totalCount\n  }\n}\n`;\nconst SALESPERSON = `\nquery MyQuery {\n  allMasterRoles(filter: {id: {in: [2, 6]}}) {\n    nodes {\n      userProfilesByRoleId {\n        nodes {\n          name\n        }\n      }\n    }\n  }\n}`;\nconst CONVERTPROJECT = gql`\nquery MyQuery($first: Int!, $offset: Int!) {\n  allProjects(filter: {status: {equalTo: ADVANCEDPAID}}, first: $first, offset: $offset, orderBy: UPDATED_BY_DESC) {\n    nodes {\n      id\n      customerByCustomerId {\n        name\n        mobile\n        projectEventsByCustomerId {\n          nodes {\n            eventStartDate\n            masterEventByEventId {\n              eventName\n            }\n          }\n        }\n      }\n      finalQuoteId\n    }\n    totalCount\n  }\n}\n`;\nconst MASTER_COUNTRY_CODE = `\nquery MyQuery {\n  allMasterCountryCodes {\n    nodes {\n      id\n      code\n      countryShortName\n    }\n  }\n}\n`;\nconst duplicate = `\nquery MyQuery($first: Int!, $offset: Int!,$search:String) {\n  allCustomers(first: $first, offset: $offset, filter: {or: [{mobile: {includes: $search}}, {serialNo: {includes: $search}}]}) {\n    nodes {\n      projectsByCustomerId(orderBy: STATUS_DESC) {\n        nodes {\n          id\n          status\n          createdAt\n          projectQuoteByFinalQuoteId {\n            id\n            isPaymentCompleted\n            description\n            advanceReceived\n            totalAmt\n          }\n        }\n      }\n      projectEventsByCustomerId(filter: {isActive: {equalTo: true}}) {\n        nodes {\n          masterEventByEventId {\n            eventName\n          }\n        }\n      }\n      id\n      name\n      mobile\n      serialNo\n      followUpDate\n    }\n    totalCount\n  }\n}\n`;\nexport  {\n    ALLCUSTOMERS,\n    GET_CUSTOMER_ID_DATA,\n    MASTER_SERVICES,\n    CUSTOMER_PROJECT_QUOTES,\n    CUSTOMER_BY_PROJECT_ID,\n    COMMUNICATION_BY_PROJECT,\n    ALLMASTEREVENT,\n    GETEPROJECTEVENT,\n    FINANCE_CUSTOMER_DATA,\n    CUSTOMERDETAILONLY,\n    ALLCUSTOMERCOUNT,\n    ADVANCEPAIDPROJECTCOUNT,\n    ADMINACCESSCUSTOMERDATA,\n    SALESPERSON,\n    CONVERTPROJECT,\n    MASTER_COUNTRY_CODE,\n    duplicate\n}","import gql from 'graphql-tag';\n\n\n    const CREATE_CUSTOMER = gql`\n    mutation MyMutation($id: UUID!, $name: String!, $mobile: String!, $email: String!, $shoot_details: String, $event_address: String, $source: EnumCustomersSource!, $profile_id: UUID!, $created_at: Datetime!, $updated_at: Datetime!, $whatsapp_number: String, $facebook_id: String, $insta_id: String, $sales_person: String!) {\n      __typename\n      createCustomer(input: {customer: {id: $id, createdAt: $created_at, updatedAt: $updated_at, createdBy: $profile_id, email: $email, mobile: $mobile, name: $name, eventAddress: $event_address, shootDetails: $shoot_details, isActive: true, source: $source, updatedBy: $profile_id, facebookId: $facebook_id, instaId: $insta_id, salesPerson: $sales_person, whatsappNumber: $whatsapp_number}}) {\n        customer {\n          id\n        }\n      }\n    }\n        \n    `;\n  const CREATE_PROJECT =  gql`\n  mutation MyMutationj(\n    $id: UUID!\n    $customer_id: UUID!\n    $created_at: Datetime!\n    $updated_at: Datetime!\n    $profile_id: UUID!\n    $final_quote_id: UUID\n  ) {\n    __typename\n    createProject(\n      input: {\n        project: {\n          id: $id\n          customerId: $customer_id\n          pgVgTl: $profile_id\n          psTl: $profile_id\n          qc: $profile_id\n          createdAt: $created_at\n          updatedAt: $updated_at\n          createdBy: $profile_id\n          updatedBy: $profile_id\n          finalQuoteId: $final_quote_id\n          isActive: true\n          status: CAPTURED\n        }\n      }\n    ) {\n      project {\n        id\n      }\n    }\n  }\n  \n  `;\n  const STATUS_UPDATE_IN_PROJECT = gql`\n  mutation MyMutation($id:UUID!,$status:EnumProjectsStatus) {\n    __typename\n    updateProjectById(input: {projectPatch: {status: $status}, id: $id}) {\n      project {\n        id\n      }\n    }\n  }\n  `;\n  const STATUS_UPDATE_IN_PROJECT_AXIOS = `mutation MyMutation($id:UUID!,$status:EnumProjectsStatus) {\n    __typename\n    updateProjectById(input: {projectPatch: {status: $status}, id: $id}) {\n      project {\n        id\n      }\n    }\n  }`;\n  const UPDATE_CUSTOMER = gql`  \n  mutation MyMutation($id: UUID!, $name: String!, $source: EnumCustomersSource!, $email: String!, $mobile: String!, $event_address: String!, $shoot_details: String!, $whatsapp_number: String, $facebook_id: String, $insta_id: String, $sales_person: String!) {\n    __typename\n    updateCustomerById(input: {customerPatch: {name: $name, source: $source, email: $email, mobile: $mobile, eventAddress: $event_address, shootDetails: $shoot_details, facebookId: $facebook_id, instaId: $insta_id, salesPerson: $sales_person, whatsappNumber: $whatsapp_number}, id: $id}) {\n      customer {\n        projectsByCustomerId {\n          nodes {\n            id\n          }\n        }\n      }\n    }\n  }\n  \n  `;\n  // const UPDATE_PROJECT = gql`\n  // mutation MyMutation(\n  //   $id:UUID!\n  //   $event_address:String\n  //   $event_date:Datetime\n  //   $shootDetails:String\n  // ) {\n  //   __typename\n  //   updateProjectById(\n  //     input: {\n  //       projectPatch: {\n  //         eventAddress: $event_address\n  //         eventDate: $event_date\n  //         shootDetails: $shootDetails\n  //       }\n  //       id: $id\n  //     }\n  //   ) {\n  //     project {\n  //       id\n  //     }\n  //   }\n  // }\n  // `;\n  const UPDATE_PROJECT_FINALQUOTE = `\n  mutation MyMutation($id: UUID!, $final_quote_id: UUID, $status: EnumProjectsStatus!) {\n    __typename\n    updateProjectById(input: {projectPatch: {finalQuoteId: $final_quote_id, status: $status}, id: $id}) {\n      project {\n        finalQuoteId\n      }\n      customerByCustomerId {\n        serialNo\n      }\n    }\n  }  \n  `;\n  const CREATE_COMMUNICATION = `\n  mutation MyMutation(\n    $id: UUID!\n    $sender_id: UUID!\n    $created_at: Datetime!\n    $updated_at: Datetime!\n    $message: String!\n    $is_internal: Boolean!\n    $project_id: UUID!\n    $mode: String\n  ) {\n    __typename\n    createCommunication(\n      input: {\n        communication: {\n          id: $id\n          senderId: $sender_id\n          createdBy: $sender_id\n          updatedBy: $sender_id\n          createdAt: $created_at\n          updatedAt: $updated_at\n          message: $message\n          isInternal: $is_internal\n          isActive: true\n          projectId: $project_id\n          mode: $mode\n        }\n      }\n    ) {\n      communication {\n        id\n      }\n    }\n  }\n  `;\n  // const USERPROFILEFOLLOWUPSTATUS = `\n  // query MyQuery($id: UUID!) {\n  //   userProfileById(id: $id) {\n  //     customersByCreatedBy(filter: {projectsByCustomerId: {some: {status: {equalTo: FOLLOWUP}}}}) {\n  //       nodes {\n  //         id\n  //         name\n  //         mobile\n  //         serialNo\n  //       }\n  //     }\n  //   }\n  // }  \n  // `;\n  const USERPROFILEFOLLOWUPSTATUS = `\n  query MyQuery {\n    allProjects(filter: {status: {equalTo: FOLLOWUP}}) {\n      nodes {\n        customerByCustomerId {\n          id\n          name\n          mobile\n          serialNo\n        }\n      }\n    }\n  }\n  `;\n  // const USERPROFILEFINALQUOTESTATUS = `\n  // query MyQuery($id: UUID!) {\n  //   userProfileById(id: $id) {\n  //     customersByCreatedBy(filter: {projectsByCustomerId: {some: {status: {equalTo: QUOTEFINAL}}}}) {\n  //       nodes {\n  //         id\n  //         name\n  //         mobile\n  //         serialNo\n  //       }\n  //     }\n  //   }\n  // }\n  \n  \n  // `;\n  const USERPROFILEFINALQUOTESTATUS = `\n  query MyQuery {\n    allProjects(filter: {status: {equalTo: QUOTEFINAL}}) {\n      nodes {\n        customerByCustomerId {\n          id\n          name\n          mobile\n          serialNo\n        }\n      }\n    }\n  }\n  `;\n  // const USERPROFILEONHOLDSTATUS = `\n  // query MyQuery($id: UUID!) {\n  //   userProfileById(id: $id) {\n  //     customersByCreatedBy(filter: {projectsByCustomerId: {some: {status: {equalTo: ONHOLD}}}}) {\n  //       nodes {\n  //         id\n  //         name\n  //         mobile\n  //         serialNo\n  //       }\n  //     }\n  //   }\n  // }\n  \n  // `;\n  const USERPROFILEONHOLDSTATUS = `\n  query MyQuery {\n    allProjects(filter: {status: {equalTo: ONHOLD}}) {\n      nodes {\n        customerByCustomerId {\n          id\n          name\n          mobile\n          serialNo\n        }\n      }\n    }\n  }\n  `;\n  // const USERPROFILEDELAYEDSTATUS = `\n  // query MyQuery($id: UUID!) {\n  //   userProfileById(id: $id) {\n  //     customersByCreatedBy(filter: {projectsByCustomerId: {some: {status: {equalTo: DELAYED}}}}) {\n  //       nodes {\n  //         id\n  //         name\n  //         mobile\n  //         serialNo\n  //       }\n  //     }\n  //   }\n  // }  \n  // `;\n  const USERPROFILEDELAYEDSTATUS = `\n  query MyQuery {\n    allProjects(filter: {status: {equalTo: DELAYED}}) {\n      nodes {\n        customerByCustomerId {\n          id\n          name\n          mobile\n          serialNo\n        }\n      }\n    }\n  }\n  `;\n  const PROJECTQUOTEUPDATE = `\n  mutation MyMutation(\n    $id: UUID!\n    $advance: String\n    $description: String\n    $advanceReceiveDate: Datetime\n  ) {\n    __typename\n    updateProjectQuoteById(\n      input: {\n        projectQuotePatch: {\n          advanceReceived: $advance\n          description: $description\n          advanceReceiveDate: $advanceReceiveDate\n        }\n        id: $id\n      }\n    ) {\n      projectQuote {\n        advanceReceived\n      }\n    }\n  }\n  \n  `;\n  const PDFGENERATER = `\n  query MyQuery($projectQuoteId: UUID!) {\n    projectQuoteById(id: $projectQuoteId) {\n      projectByProjectId {\n        customerByCustomerId {\n          projectEventsByCustomerId(orderBy: CREATED_AT_ASC) {\n            nodes {\n              brideName\n              eventStartDate\n              groomName\n              masterEventByEventId {\n                eventName\n              }\n              eventServicesByProjectEventId(filter: {projectQuoteId: {equalTo: $projectQuoteId}}, orderBy: ORDER_DATA_ASC) {\n                nodes {\n                  masterServiceByServiceId {\n                    serviceName\n                    description\n                    duration\n                  }\n                  quantity\n                  isDeliverable\n                  servicePrice\n                }\n              }\n              location\n            }\n          }\n          name\n        }\n      }\n      totalAmt\n    }\n  }\n  \n  `;\n  const PROJECTEVENTSERVICE =   `\n  query MyQuery($Id: UUID!,$FinalQuoteId:UUID!) {\n    projectById(id: $Id) {\n      customerByCustomerId {\n        projectEventsByCustomerId {\n          nodes {\n            masterEventByEventId {\n              id\n              eventName\n            }\n            eventServicesByProjectEventId(filter: {projectQuoteId: {equalTo: $FinalQuoteId}}) {\n              nodes {\n                quantity\n                masterServiceByServiceId {\n                  id\n                  serviceName\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n  `;\n  const FOLLOWUPDATE = `\n  mutation MyMutation ($follow_up_date:Datetime!,$id:UUID!) {\n    __typename\n    updateCustomerById(input: {customerPatch: {followUpDate: $follow_up_date}, id: $id}) {\n      customer {\n        followUpDate\n      }\n    }\n  }\n  `;\n  export {\n      CREATE_CUSTOMER,\n      CREATE_PROJECT,\n      CREATE_COMMUNICATION,\n      STATUS_UPDATE_IN_PROJECT,\n      STATUS_UPDATE_IN_PROJECT_AXIOS,\n      UPDATE_CUSTOMER,\n      UPDATE_PROJECT_FINALQUOTE,\n      USERPROFILEFOLLOWUPSTATUS,\n      USERPROFILEFINALQUOTESTATUS,\n      USERPROFILEONHOLDSTATUS,\n      USERPROFILEDELAYEDSTATUS,\n      PROJECTQUOTEUPDATE,\n      PDFGENERATER,\n      PROJECTEVENTSERVICE,\n      FOLLOWUPDATE\n  }","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport React from 'react';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nexport default function createSvgIcon(path, displayName) {\n  var Component = React.memo(React.forwardRef(function (props, ref) {\n    return React.createElement(SvgIcon, _extends({\n      ref: ref\n    }, props), path);\n  }));\n\n  if (process.env.NODE_ENV !== 'production') {\n    Component.displayName = \"\".concat(displayName, \"Icon\");\n  }\n\n  Component.muiName = SvgIcon.muiName;\n  return Component;\n}","import React from 'react';\n// import Button from '@material-ui/core/Button';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport { makeStyles } from '@material-ui/core/styles';\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    '& > * + *': {\n      marginTop: theme.spacing(2),\n    },\n  },\n}));\n\nexport default function CustomizedSnackbars(props) {\n  const classes = useStyles();\n\n  const handleClose = () => {\n      \n    props.snackBarClose();\n  };\n\n  return (\n    <div className={classes.root}>\n      <Snackbar open={props.open} autoHideDuration={6000} anchorOrigin={{ vertical:\"top\", horizontal:\"center\" }} onClose={handleClose}>\n        <Alert onClose={handleClose} severity={props.color}>\n          {props.message}\n        </Alert>\n      </Snackbar>\n    </div>\n  );\n}\n","import React, { Component } from 'react';\nimport { Grid } from '@material-ui/core';\nimport TextField from '@material-ui/core/TextField';\n// import Input from '@material-ui/core/Input';\n// import InputLabel from '@material-ui/core/InputLabel';\n// import FormControl from '@material-ui/core/FormControl';\n// import FormHelperText from '@material-ui/core/FormHelperText';\n// import Select from '@material-ui/core/Select';\n\nclass StatusDropDown extends Component {\n  constructor(props){\n    super(props);\n  this.state = {\n    name: '',\n    currency: 'EUR',\n    label: 'FollowUp',\n  }\n};\n  // handleChange = event => {\n  //   this.setState({ name: event.target.value });\n  // };\n  handleChange = name => event => {\n    this.setState({\n      [name]: event.target.value,\n    });\n  };\n  render() {\n    let LeadStatus = (this.props.LeadStatus !== undefined && this.props.LeadStatus !==null) ? this.props.LeadStatus : [];\n    let statusValue = this.props.status\n    // let stylesdropdown =this.props.stylesdropdown;\n    console.log(\"test\")\n    return (\n      <Grid item xs={12}  >\n        <TextField\n          id=\"select-currency-native\"          \n          select\n          className=\"test-input\"\n         style={{height:'30px !important ',width:'100%'}}\n          value={statusValue}\n          onChange={this.handleChange('currency')}\n          SelectProps={{\n            native: true,\n          }}\n          disabled={this.props.disabled}\n\n          margin=\"dense\"\n\n          variant=\"outlined\"\n        >\n          {LeadStatus.map(option => (\n            <option key={option.value} value={option.value}>\n              {option.label}\n            </option>\n          ))}\n        </TextField>\n     \n\n          {/* <FormControl className=\"\" style={{ width:'100%'}}>\n            <Select\n              native\n              style={{ height: '35px', border:'1px solid' }}\n              className=\"test-input\"\n              value={this.state.currency}\n              onChange={this.handleChange('currency')}\n              variant=\"outlined\"\n            >\n       {LeadStatus.map(option => (\n            <option key={option.value} value={option.value}>\n              {option.label}\n            </option>\n             ))}\n            </Select>\n            \n          </FormControl> */}\n      </Grid>\n    )\n  }\n}\nexport default StatusDropDown;","export const numberFormat = (value) =>\n  new Intl.NumberFormat('en-IN', {\n    style: 'currency',\n    currency: 'INR'\n  }).format(value).split('.')[0];","import React from 'react';\n\nconst CardLayout = ({children, styleName, childrenStyle}) => {\n  return (\n    <div className={`jr-card`}>\n      {children}\n    </div>\n  )\n};\n\nexport default CardLayout;\n\n","import React from 'react';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\nimport ImageIcon from '@material-ui/icons/Image';\nimport 'index.css'\n\n// const ITEM_HEIGHT = 48;\n// const ITEM_PADDING_TOP = 8;\n// const MenuProps = {\n//   PaperProps: {\n//     style: {\n//       maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n//       width: 270,\n//     },\n    \n//   },\n\n  \n// };\n\nconst names = [\n  'Oliver Hansen',\n  'Van Henry',\n  'April Tucker',\n  'Ralph Hubbard',\n  'Omar Alexander',\n  'Carlos Abbott',\n  'Miriam Wagner',\n  'Bradley Wilkerson',\n  'Virginia Andrews',\n  'Kelly Snyder',\n];\n// const [open, setOpen] = React.useState(false);\n\n\nclass MultipleSelect extends React.Component {\n  state = {\n    name: [],\n    id:this.props.keys,\n    open:false,\n    \n    \n  };\n  handleClickOpen=()=> {\n    this.setState({open:true});\n  }\n  \n   handleClose=()=> {\n    document.getElementById('selects').blur(); \n    // document.getElementsById('selects').blur();\n    this.setState({open:false});\n    \n \n  }\n  handleChange = event => {\n    this.setState({name: event.target.value});\n    \n  };\n  handleBlur = (e) => {\n    // document.getElementById('selects').blur(); \n    \n    // console.log('Closed')\n    this.setState({open: true});\n    \n  };\n  render() {\n    let {open} = this.state;\n// console.log(this.state.name,this.state.id);\n    return (\n      <div className=\"row\"  >\n        <div className=\"col-12\">\n          <FormControl className=\"w-100 \" style={{minWidth:'140px',maxWidth:'140px'}}  >\n            <InputLabel htmlFor=\"name-multiple\">Name</InputLabel>\n       \n            {/*  */}\n            <Select\n        //  className=\"selectMultiple\"\n        variant='outlined'\n          multiple\n          title={this.state.name}\n          value={this.state.name}\n          onChange={this.handleChange}\n          onBlur={(e)=>this.handleBlur(e)}\n          // onBlur={this.handleBlur}\n          input={<Input id=\"select-multiple-checkbox\"  id=\"selects\" /> }\n          renderValue={selected => selected.join(',')}\n          MenuProps\n          \n        >\n          {/*  */}\n\n\n          \n          {names.map(name => (\n            \n            <MenuItem key={name} value={name}  className=\"scroll\"  >\n              \n              \n              <ListItemAvatar className=\"avatarMultiSelect\">\n          <Avatar >\n            <ImageIcon />\n          </Avatar>\n        </ListItemAvatar>\n        <Checkbox color=\"primary\" checked={this.state.name.indexOf(name) > -1} />\n              <ListItemText primary={name} />\n            </MenuItem>\n          ))}\n          {/*  */}\n        </Select>\n          </FormControl>\n        </div>\n\n\n        {/*  */}\n        <div>\n    {open===true?\n      <Dialog\n        open={open}\n        onClose={this.handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">Confirmation <i className=\"fa fa-check-circle\" style={{fontSize:'24px'}}></i></DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n          { this.state.name.length>0?\n          <>\n         <div style={{fontWeight:'bold'}}>Are you sure to assign these photographers for the event?</div>\n      \n        \n          <span style={{fontWeight:'italic'}}> {this.state.name.map(\n            n=>\n            (\n              \n             \n              \n             \n             <div>{n}</div>\n             \n          \n            \n            )\n\n            \n          )}\n           </span>\n</>\n          :\n          <span>The photographers were not selected</span>\n\n        }\n\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={this.handleClose} color=\"primary\">\n            No\n          </Button>\n          <Button onClick={this.handleClose} color=\"primary\" autoFocus>\n            Yes\n          </Button>\n        </DialogActions>\n      </Dialog>\n\n:\n''\n    }\n    </div>\n      </div>\n    );\n  }\n}\n\nexport default MultipleSelect;","import React from 'react';\n\nimport keycode from 'keycode';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\n// import {NavLink, withRouter} from 'react-router-dom';\n// import { NavHashLink as NavLink } from 'react-router-hash-link';\nimport MultipleSelect from '../../../../../components/selects/multi'\nimport Button from '@material-ui/core/Button';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport NotificationsActiveIcon from '@material-ui/icons/NotificationsActive';\nimport NotificationsOffIcon from '@material-ui/icons/NotificationsOff';\nimport StatusDropDown from 'app/routes/AllLeads/StatusDropDown'; \nimport \"index.css\";\n// let counter = 0;\n\n// function createData(leadId, leadDate, leadName, leadNum, EventDate, EventType, Quote, FinalQuote) {\n//   counter += 1;\n//   return { id: counter, leadId, leadDate, leadName, leadNum, EventDate, EventType, Quote, FinalQuote };\n// }\n\n// const columnData = [\n//   { id: 'LeadId', align: false, disablePadding: true, label: 'Lead Id' },\n//   { id: 'LeadDate', align: true, disablePadding: false, label: 'Lead Date' },\n//   { id: 'Customer', align: true, disablePadding: false, label: 'Customer' },\n\n// ];\n\n\nclass CardsTable extends React.Component {\n  handleRequestSort = (event, property) => {\n    const orderBy = property;\n    let order = 'desc';\n\n    if (this.state.orderBy === property && this.state.order === 'desc') {\n      order = 'asc';\n    }\n\n    const data =\n      order === 'desc'\n        ? this.state.data.sort((a, b) => (b[orderBy] < a[orderBy] ? -1 : 1))\n        : this.state.data.sort((a, b) => (a[orderBy] < b[orderBy] ? -1 : 1));\n\n    this.setState({ data, order, orderBy });\n  };\n  handleSelectAllClick = (event, checked) => {\n    if (checked) {\n      this.setState({ selected: this.state.data.map(n => n.id) });\n      return;\n    }\n    this.setState({ selected: [] });\n  };\n  handleKeyDown = (event, id) => {\n    if (keycode(event) === 'space') {\n      this.handleClick(event, id);\n    }\n  };\n  handleClick = (event, id) => {\n    const { selected } = this.state;\n    const selectedIndex = selected.indexOf(id);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, id);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1),\n      );\n    }\n\n    this.setState({ selected: newSelected });\n  };\n  handleChangePage = (event, page) => {\n    this.setState({ page });\n  };\n  handleChangeRowsPerPage = event => {\n    this.setState({ rowsPerPage: event.target.value });\n\n  };\n  isSelected = id => this.state.selected.indexOf(id) !== -1;\n\n  constructor(props, context) {\n    super(props, context);\n    // \n    // {\n    //   LeadId: '#1',\n    //   PhoneNumber: \"909283151\",\n    //   CustomerName: <span className=\"jr-link\" style ={{fontWeight:\"bold\"}} key={1}>Rajaaa</span>, \n    //   image: 'https://via.placeholder.com/150x150'\n    // },\n\n    // \n    this.state = {\n      order: 'asc',\n      orderBy: 'LeadId',\n      selected: [],\n      page: 0,\n  \n      rowsPerPage: 5,\n\n    };\n  }\n\n  render() {\n    const {  rowsPerPage, page } = this.state;\n    const {datas} = this.props;\n    let data = datas?.length>0 ?datas :[];\n    // let stylesbtn =this.props.stylesbtn;\n    let stylesdropdown=this.props.stylesdropdown;\n    let LeadStatus=this.props.LeadStatus;\n  \n    return (\n     \n      <div>\n        {/* <EnhancedTableToolbar numSelected={selected.length}/> */}\n        <div className=\"flex-auto cardsTableHeight\"  style={{overflowY:'hidden !important',height: this.props.cardsTableHeight}}>\n          <div className=\"table-responsive-material borderNoneSmallScreen\" >\n          {/* {rows.length==undefined? */}\n          {data?.length!==0?\n            <Table  >\n              <TableHead className=\"padspacetbl padspace1\">\n                <TableRow className=\"padspacetbl padspace1\">\n                  <TableCell className=\"padspacetbl padspace1\" colSpan={3} align=\"left\" >\n                    \n                    {/* <h3><i class=\"fa fa-bell\" style={{ color: '#252525', fontWeight: '400' , }}><span style={{fontFamily: '-apple-system,BlinkMacSystemFont, \"Segoe UI\",\"Roboto\", \"Oxygen\",\"Ubuntu\", \"Cantarell\", \"FiraSans\", \"Droid Sans\", \"HelveticaNeue\",sans-serif !important'}}>{this.props.tableHeading}</span></i></h3> */}\n<div className=\"jr-card-header mb-3\">\n                    <h3 className=\"card-heading mb-0 headCard\" style={{ display: \"flex\",alignItems: \"center\"}}>\n              <NotificationsActiveIcon />&nbsp;&nbsp;\n              {/* Latest Notifications */}<span style={{fontWeight:'bold'}}>{this.props.tableHeading}</span>\n            </h3>\n            </div>            \n                  </TableCell>\n\n\n                </TableRow>\n              </TableHead>\n              <TableBody className=\"padspacetbl padspace1\" >\n                {data?.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((n,index) => {\n                  // const isSelected = this.isSelected(n.id);\n                  return (\n                    \n                    <TableRow key={n?.id} className=\"padspacetbl padspace1\" >\n                      <TableCell className='padspacetbl  btnPad cellIcon padspace1'>\n                        <NotificationsIcon style={{ fontSize: '30px' }} /></TableCell>\n                      <TableCell align=\"left\" className=\"padspacetbl padspace1\"><div>{n?.serial_no?.toUpperCase()}</div>\n                      {/* <span> */}\n                      <div style={{ color: '#3f51b5', fontWeight: 'bold', fontFamily: '-apple-system,BlinkMacSystemFont, \"Segoe UI\",\"Roboto\", \"Oxygen\",\"Ubuntu\", \"Cantarell\", \"FiraSans\", \"Droid Sans\", \"HelveticaNeue\",sans-serif !important' }}>\n                        {(this.props.navlinks)   ? \n                      // <NavLink to={\"/app/\"+this.props.navlinks}>\n                      n?.name\n                      // </NavLink>\n                    \n                      :\n                      n?.name\n                      }\n                      {/* </span> */}\n                      </div>\n              \n                   {n?.mobile.split(\" \")[0]}\n                      \n                       </TableCell>\n                     \n                        {( stylesdropdown === \"none\" && this.props.stylesdropdown2===\"none\" ) ?\n                         <TableCell align=\"right\" className=\"padspacetbl padspace1\" > <div style={{ textAlign: 'right' }} >\n\n{(this.props.navlinks)   ? \n                          // <NavLink to={\"/app/\"+this.props.navlinks}\n                          // // to={url+'/'}\n                          // >\n                          <Button variant=\"contained\"  className=\"jr-btn bg-primary text-white btnSmall padspace1 btn-format\" onClick={()=>this.props.history.push(`/app/lead-quote-gen/${n?.id}`)} >{this.props.buttonName}</Button>\n                          // </NavLink>\n                          :\n                          <Button variant=\"contained\"  className=\"jr-btn bg-primary text-white btnSmall padspace1 btn-format\" onClick={()=>this.props.history.push(`/app/lead-quote-gen/${n?.id}`)} >{this.props.buttonName}</Button>\n\n}\n                         </div></TableCell>\n                         :\n                         (stylesdropdown === \"block\" && this.props.stylesdropdown2 === \"none\")?\n                         <TableCell align=\"center\" className=\"padspace\" style={{ fontSize: '0.8125rem', fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif', fontWeight: '400', overflow:'hidden' }}>\n                           \n                           \n                           <StatusDropDown disabled={false} LeadStatus={LeadStatus} stylesdropdown={stylesdropdown}/></TableCell>\n                           :\n                           <TableCell align=\"center\" className=\"padspace\" style={{ fontSize: '0.8125rem', fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif', fontWeight: '400', overflow:'hidden' }}>\n                           \n                           \n                           <MultipleSelect keys={JSON.parse(n.leadId)} onChange={this.handleChangeSelect}/></TableCell>\n                        }\n                       \n                        \n                      \n\n                    </TableRow>\n                  );\n                })}\n               \n      \n           \n              </TableBody>\n              {\n                data?.length>5?\n              <TableFooter className=\"padspacetbl padspace1\" >\n                <TableRow className=\"padspacetbl padspace1\">\n                  <TablePagination className=\"padspacetbl stepList padspace1\"\n                    count={data?.length}\n\n                    rowsPerPage={rowsPerPage}\n                    rowsPerPageOptions={[]}\n                    rows={[]}\n                    page={page}\n                    onChangePage={this.handleChangePage}\n                    onChangeRowsPerPage={this.handleChangeRowsPerPage}\n                   \n                  />\n                </TableRow>\n              </TableFooter>\n              :\n              ''\n              }\n            </Table>\n   :\n   <div className = 'cardsTableHeight' style={{height: this.props.cardsTableHeight}}>\n  {/* <div style={{color:'black',fontSize:'25px',fontWeight:'bold',display:'flex',justifyContent:'center'}}> {this.props.tableHeading}</div> */}\n  <div className=\"jr-card-header mb-3\">\n                    <h3 className=\"card-heading mb-0 headCard\" style={{ display: \"flex\",alignItems: \"center\"}}>\n              <NotificationsActiveIcon />&nbsp;&nbsp;\n              {/* Latest Notifications */}<span style={{fontWeight:'bold'}}>{this.props.tableHeading}</span>\n            </h3>\n            </div> \n<div style={{top:'45%',right:'45%',position:'sticky'}}>\n<div >\n <div style={{display:'flex',justifyContent:'center',fontSize:'16px'}}>\n   You don't have reminders to followUp... \n </div>\n<br />\n\n  <br />\n<div style={{ display:'flex',justifyContent:'center' }}>\n{/* <i class=\"fa fa-bell\" style={{ fontSize: '60px',color:'black',\nfontWeight:'bold',display:'flex',justifyContent:'center' }}></i> */}\n<NotificationsOffIcon style={{ fontSize: '60px',\nfontWeight:'bold' }} />\n{/* <i style={{ fontSize: '40px',\nfontWeight:'bold',display:'flex',justifyContent:'center' }} class=\"fa\">&#xf1f6; */}\n</div>\n  </div>\n\n   </div> </div> \n   }\n\n\n\n      \n\n\n\n{/* :\n<div>sdfsdf</div>\n} */}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default CardsTable;","import React from 'react';\nimport createSvgIcon from './createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Close');","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\n// import DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\n// import DialogTitle from '@material-ui/core/DialogTitle';\nimport InfoIcon from '@material-ui/icons/Info';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport { Grid } from '@material-ui/core';\nimport ErrorIcon from '@material-ui/icons/Error';\nexport default function AlertDialog(props) {\n//   const [open, setOpen] = React.useState(false);\n\n//   const handleClickOpen = () => {\n//     setOpen(true);\n//   };\n\n  const handleClose = () => {\n    props.alertClose();\n  };\n  const handleSure = () => {\n    props.alertSure();\n  }\n  const handleCancel = () => {\n    props.alertCancel();\n  }\n  const buttonBackgroundColor = ()=>{\n      if(props.alertStatus ===\"info\"){\n          return \"#6a68cc\" ;\n      }else if(props.alertStatus ===\"success\"){\n          return \"rgb(94, 152, 92)\";\n      }else{\n          return \"rgba(222, 78, 53, 0.75)\";\n      }\n  }\n  return (\n    < >\n      {/* <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\n        Open alert dialog\n      </Button> */}\n      <Dialog\n        open={props.alertOpen}\n        // onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        {/* <DialogTitle id=\"alert-dialog-title\">{\"Use Google's location service?\"}</DialogTitle> */}\n        <DialogContent style={{    margin: \"auto\",\n    padding: \"30px 50px\"}} >\n        <Grid item container alignItems=\"center\" style={{display:\"flex\",justifyContent:\"center\"}}>\n            {\n                props.alertStatus ===\"info\" ?<> <InfoIcon style={{    color: \"#8988d4\",fontSize: \"50px\"}}/>&nbsp;&nbsp;</> : props.alertStatus ===\"success\" ? \n                <><CheckCircleIcon style={{    color: \"rgba(10, 148, 40, 0.77)\",fontSize: \"50px\"}}/>&nbsp;&nbsp;</> :<> <ErrorIcon style={{    color: \"rgba(222, 78, 53, 0.75)\",fontSize: \"50px\"}}/>&nbsp;&nbsp;</>\n            }\n        </Grid>\n        <Grid item container alignItems=\"center\">\n          <DialogContentText id=\"alert-dialog-description\" style={{fontWeight: \"700\", marginTop: \"15px\"}}  >\n            {props.alertContent}\n          </DialogContentText>\n        </Grid>\n        <Grid item container style={{display:\"flex\",justifyContent:\"flex-end\",marginTop:\"30px\"}} >\n          {\n            props.twoBtn ? <>\n             <Button onClick={handleSure} style={{ background: \"rgb(137, 136, 212\",color: \"#fff\"}}>\n            Sure\n          </Button>\n          <Button onClick={handleCancel} style={{ background: \"rgba(212, 200, 200, 0.13)\",color: \"rgb(37, 35, 35)\"}}>\n            Cancel\n          </Button>\n            </> : \n            <>\n             <Button onClick={handleClose} style={{ background: buttonBackgroundColor(),color: \"#fff\"}}>\n            Ok\n          </Button>\n            </>\n          }\n         \n        </Grid>\n        </DialogContent>\n        {/* <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Disagree\n          </Button>\n         \n        </DialogActions> */}\n      </Dialog>\n    </>\n  );\n}","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 15h-2v-6h2v6zm0-8h-2V7h2v2z\"\n}), 'Info');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckCircle');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 15h-2v-2h2v2zm0-4h-2V7h2v6z\"\n}), 'Error');\n\nexports.default = _default;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@material-ui/utils';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nvar SIZE = 44;\n\nfunction getRelativeValue(value, min, max) {\n  return (Math.min(Math.max(min, value), max) - min) / (max - min);\n}\n\nfunction easeOut(t) {\n  t = getRelativeValue(t, 0, 1); // https://gist.github.com/gre/1650294\n\n  t = (t -= 1) * t * t + 1;\n  return t;\n}\n\nfunction easeIn(t) {\n  return t * t;\n}\n\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'inline-block'\n    },\n\n    /* Styles applied to the root element if `variant=\"static\"`. */\n    static: {\n      transition: theme.transitions.create('transform')\n    },\n\n    /* Styles applied to the root element if `variant=\"indeterminate\"`. */\n    indeterminate: {\n      animation: '$circular-rotate 1.4s linear infinite'\n    },\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      color: theme.palette.primary.main\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      color: theme.palette.secondary.main\n    },\n\n    /* Styles applied to the `svg` element. */\n    svg: {\n      display: 'block' // Keeps the progress centered\n\n    },\n\n    /* Styles applied to the `circle` svg path. */\n    circle: {\n      stroke: 'currentColor' // Use butt to follow the specification, by chance, it's already the default CSS value.\n      // strokeLinecap: 'butt',\n\n    },\n\n    /* Styles applied to the `circle` svg path if `variant=\"static\"`. */\n    circleStatic: {\n      transition: theme.transitions.create('stroke-dashoffset')\n    },\n\n    /* Styles applied to the `circle` svg path if `variant=\"indeterminate\"`. */\n    circleIndeterminate: {\n      animation: '$circular-dash 1.4s ease-in-out infinite',\n      // Some default value that looks fine waiting for the animation to kicks in.\n      strokeDasharray: '80px, 200px',\n      strokeDashoffset: '0px' // Add the unit to fix a Edge 16 and below bug.\n\n    },\n    '@keyframes circular-rotate': {\n      '100%': {\n        transform: 'rotate(360deg)'\n      }\n    },\n    '@keyframes circular-dash': {\n      '0%': {\n        strokeDasharray: '1px, 200px',\n        strokeDashoffset: '0px'\n      },\n      '50%': {\n        strokeDasharray: '100px, 200px',\n        strokeDashoffset: '-15px'\n      },\n      '100%': {\n        strokeDasharray: '100px, 200px',\n        strokeDashoffset: '-125px'\n      }\n    },\n\n    /* Styles applied to the `circle` svg path if `disableShrink={true}`. */\n    circleDisableShrink: {\n      animation: 'none'\n    }\n  };\n};\n/**\n * ## ARIA\n *\n * If the progress bar is describing the loading progress of a particular region of a page,\n * you should use `aria-describedby` to point to the progress bar, and set the `aria-busy`\n * attribute to `true` on that region until it has finished loading.\n */\n\nvar CircularProgress = React.forwardRef(function CircularProgress(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'primary' : _props$color,\n      _props$disableShrink = props.disableShrink,\n      disableShrink = _props$disableShrink === void 0 ? false : _props$disableShrink,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 40 : _props$size,\n      style = props.style,\n      _props$thickness = props.thickness,\n      thickness = _props$thickness === void 0 ? 3.6 : _props$thickness,\n      _props$value = props.value,\n      value = _props$value === void 0 ? 0 : _props$value,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'indeterminate' : _props$variant,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"color\", \"disableShrink\", \"size\", \"style\", \"thickness\", \"value\", \"variant\"]);\n\n  var circleStyle = {};\n  var rootStyle = {};\n  var rootProps = {};\n\n  if (variant === 'determinate' || variant === 'static') {\n    var circumference = 2 * Math.PI * ((SIZE - thickness) / 2);\n    circleStyle.strokeDasharray = circumference.toFixed(3);\n    rootProps['aria-valuenow'] = Math.round(value);\n\n    if (variant === 'static') {\n      circleStyle.strokeDashoffset = \"\".concat(((100 - value) / 100 * circumference).toFixed(3), \"px\");\n      rootStyle.transform = 'rotate(-90deg)';\n    } else {\n      circleStyle.strokeDashoffset = \"\".concat((easeIn((100 - value) / 100) * circumference).toFixed(3), \"px\");\n      rootStyle.transform = \"rotate(\".concat((easeOut(value / 70) * 270).toFixed(3), \"deg)\");\n    }\n  }\n\n  return React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, color !== 'inherit' && classes[\"color\".concat(capitalize(color))], {\n      'indeterminate': classes.indeterminate,\n      'static': classes.static\n    }[variant]),\n    style: _extends({\n      width: size,\n      height: size\n    }, rootStyle, {}, style),\n    ref: ref,\n    role: \"progressbar\"\n  }, rootProps, other), React.createElement(\"svg\", {\n    className: classes.svg,\n    viewBox: \"\".concat(SIZE / 2, \" \").concat(SIZE / 2, \" \").concat(SIZE, \" \").concat(SIZE)\n  }, React.createElement(\"circle\", {\n    className: clsx(classes.circle, disableShrink && classes.circleDisableShrink, {\n      'indeterminate': classes.circleIndeterminate,\n      'static': classes.circleStatic\n    }[variant]),\n    style: circleStyle,\n    cx: SIZE,\n    cy: SIZE,\n    r: (SIZE - thickness) / 2,\n    fill: \"none\",\n    strokeWidth: thickness\n  })));\n});\nprocess.env.NODE_ENV !== \"production\" ? CircularProgress.propTypes = {\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['primary', 'secondary', 'inherit']),\n\n  /**\n   * If `true`, the shrink animation is disabled.\n   * This only works if variant is `indeterminate`.\n   */\n  disableShrink: chainPropTypes(PropTypes.bool, function (props) {\n    if (props.disableShrink && props.variant && props.variant !== 'indeterminate') {\n      return new Error('Material-UI: you have provided the `disableShrink` prop ' + 'with a variant other than `indeterminate`. This will have no effect.');\n    }\n\n    return null;\n  }),\n\n  /**\n   * The size of the circle.\n   * If using a number, the pixel unit is assumed.\n   * If using a string, you need to provide the CSS unit, e.g '3rem'.\n   */\n  size: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n\n  /**\n   * The thickness of the circle.\n   */\n  thickness: PropTypes.number,\n\n  /**\n   * The value of the progress indicator for the determinate and static variants.\n   * Value between 0 and 100.\n   */\n  value: PropTypes.number,\n\n  /**\n   * The variant to use.\n   * Use indeterminate when there is no progress value.\n   */\n  variant: PropTypes.oneOf(['determinate', 'indeterminate', 'static'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCircularProgress',\n  flip: false\n})(CircularProgress);","import React from 'react';\nimport createSvgIcon from './createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M20 12l-1.41-1.41L13 16.17V4h-2v12.17l-5.58-5.59L4 12l8 8 8-8z\"\n}), 'ArrowDownward');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport ArrowDownwardIcon from '../internal/svg-icons/ArrowDownward';\nimport withStyles from '../styles/withStyles';\nimport ButtonBase from '../ButtonBase';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      cursor: 'pointer',\n      display: 'inline-flex',\n      justifyContent: 'flex-start',\n      flexDirection: 'inherit',\n      alignItems: 'center',\n      '&:focus': {\n        color: theme.palette.text.secondary\n      },\n      '&:hover': {\n        color: theme.palette.text.secondary,\n        '& $icon': {\n          opacity: 0.5\n        }\n      },\n      '&$active': {\n        color: theme.palette.text.primary,\n        // && instead of & is a workaround for https://github.com/cssinjs/jss/issues/1045\n        '&& $icon': {\n          opacity: 1,\n          color: theme.palette.text.secondary\n        }\n      }\n    },\n\n    /* Pseudo-class applied to the root element if `active={true}`. */\n    active: {},\n\n    /* Styles applied to the icon component. */\n    icon: {\n      fontSize: 18,\n      marginRight: 4,\n      marginLeft: 4,\n      opacity: 0,\n      transition: theme.transitions.create(['opacity', 'transform'], {\n        duration: theme.transitions.duration.shorter\n      }),\n      userSelect: 'none'\n    },\n\n    /* Styles applied to the icon component if `direction=\"desc\"`. */\n    iconDirectionDesc: {\n      transform: 'rotate(0deg)'\n    },\n\n    /* Styles applied to the icon component if `direction=\"asc\"`. */\n    iconDirectionAsc: {\n      transform: 'rotate(180deg)'\n    }\n  };\n};\n/**\n * A button based label for placing inside `TableCell` for column sorting.\n */\n\nvar TableSortLabel = React.forwardRef(function TableSortLabel(props, ref) {\n  var _props$active = props.active,\n      active = _props$active === void 0 ? false : _props$active,\n      children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$direction = props.direction,\n      direction = _props$direction === void 0 ? 'asc' : _props$direction,\n      _props$hideSortIcon = props.hideSortIcon,\n      hideSortIcon = _props$hideSortIcon === void 0 ? false : _props$hideSortIcon,\n      _props$IconComponent = props.IconComponent,\n      IconComponent = _props$IconComponent === void 0 ? ArrowDownwardIcon : _props$IconComponent,\n      other = _objectWithoutProperties(props, [\"active\", \"children\", \"classes\", \"className\", \"direction\", \"hideSortIcon\", \"IconComponent\"]);\n\n  return React.createElement(ButtonBase, _extends({\n    className: clsx(classes.root, className, active && classes.active),\n    component: \"span\",\n    disableRipple: true,\n    ref: ref\n  }, other), children, hideSortIcon && !active ? null : React.createElement(IconComponent, {\n    className: clsx(classes.icon, classes[\"iconDirection\".concat(capitalize(direction))])\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? TableSortLabel.propTypes = {\n  /**\n   * If `true`, the label will have the active styling (should be true for the sorted column).\n   */\n  active: PropTypes.bool,\n\n  /**\n   * Label contents, the arrow will be appended automatically.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The current sort direction.\n   */\n  direction: PropTypes.oneOf(['asc', 'desc']),\n\n  /**\n   * Hide sort icon when active is false.\n   */\n  hideSortIcon: PropTypes.bool,\n\n  /**\n   * Sort icon to use.\n   */\n  IconComponent: PropTypes.elementType\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTableSortLabel'\n})(TableSortLabel);","import React from 'react';\n\nimport keycode from 'keycode';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\n// import TableFooter from '@material-ui/core/TableFooter';\nimport TableHead from '@material-ui/core/TableHead';\n// import TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\n\nimport { numberFormat } from '../../priceformat/price'\n// import ReactTableContainer from \"react-table-container\";\n// import Buttons from 'Buttons/icon.js';\nimport Button from '@material-ui/core/Button';\nimport moment from \"moment\";\nimport { v4 as uuidv4 } from 'uuid';\nimport { GRAPHQL_URL } from '../../config/index';\nimport * as axios from 'axios';\nimport { Grid, TableSortLabel } from '@material-ui/core';\n\n// import StatusDropDown from 'app/routes/AllLeads/StatusDropDown';\n// import Paper from \"@material-ui/core/Paper\";\nimport \"index.css\";\nimport { withRouter } from 'react-router-dom';\nimport { Query, withApollo } from 'react-apollo';\n// import IntlMessages from '../../util/IntlMessages';\nimport { FINANCE_CUSTOMER_DATA, ADMINACCESSCUSTOMERDATA } from '../../services/grapgql/query';\nimport { STATUS_UPDATE_IN_PROJECT, STATUS_UPDATE_IN_PROJECT_AXIOS, CREATE_COMMUNICATION, PROJECTQUOTEUPDATE } from '../../services/grapgql/mutation';\nimport { AuthContext } from '../../context/auth'\nimport TextField from '@material-ui/core/TextField';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\n// import DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n// import ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\n// import ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\nexport class AlertDialog extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      unmounted: false,\n      advance: \"\",\n      description: \"\",\n      totalAmount: \"\",\n      advancePaid: \"\",\n      id: \"\",\n      advanceErrorMsg: \"Enter your amount\",\n      descriptionErrorMsg: \"Enter your description\",\n      advanceError: false,\n      descriptionError: false\n    }\n  }\n  componentWillReceiveProps(nextProps) {\n    let advance = nextProps.paidDetails.advance;\n    let description = nextProps.paidDetails.description;\n    this.setState({\n      advance,\n      description\n    })\n  }\n  componentWillUnmount() {\n    this.setState({\n      unmounted: true\n    });\n\n  }\n  handleClose = () => {\n    this.props.paidAlertClose();\n  };\n  handleSave = () => {\n    let paidInfo = this.state;\n    if (this.state.advance?.trim().length > 0) {\n      paidInfo.advanceError = false;\n    }\n    else {\n      paidInfo.advanceError = true;\n\n    }\n    if (this.state.description?.trim().length > 0) {\n      paidInfo.descriptionError = false;\n    } else {\n      paidInfo.descriptionError = true;\n    }\n    if (this.state.unmounted) return;\n\n    this.setState({\n      ...paidInfo\n    })\n    if (!paidInfo.advanceError && !paidInfo.descriptionError) {\n      // let advanceData = String(Number(this.state.advance)+(this.props.paidDetails?.advance ?Number(this.props.paidDetails?.advance):0));\n      let params = {\n        id: this.props.paidDetails.id,\n        advance: this.state.advance,\n        description: this.state.description,\n        advanceReceiveDate: new Date()\n      }\n      axios.post(GRAPHQL_URL, { query: PROJECTQUOTEUPDATE, variables: params })\n        .then(res => {\n          if (res) {\n            axios.post(GRAPHQL_URL, { query: STATUS_UPDATE_IN_PROJECT_AXIOS, variables: this.props.advance_paid_status_value })\n              .then(res => {\n                if (res) {\n                  this.props.paidAlertClose();\n\n                }\n              })\n              .catch(console.error)\n          }\n        })\n        .catch(console.error)\n    } else {\n      return;\n    }\n  }\n  advanceChange = (data) => {\n    if (this.state.unmounted) return;\n\n    if (Number(data) <= Number(this.props.paidDetails?.totalAmd)) {\n      this.setState({\n        advance: data\n      })\n    }\n  }\n  handleChange = (data) => {\n    if (this.state.unmounted) return;\n\n    this.setState({\n      description: data\n    })\n  }\n  render() {\n    return (\n      <div>\n        <Dialog\n          open={this.props.open}\n          // onClose={handleClose}\n          aria-labelledby=\"alert-dialog-title\"\n          aria-describedby=\"alert-dialog-description\"\n        >\n          <DialogTitle id=\"alert-dialog-title\">{\"Advance Paid Details\"}</DialogTitle>\n          <DialogContent>\n            {/* <DialogContentText id=\"alert-dialog-description\">\n            Let Google help apps determine location. This means sending anonymous location data to\n            Google, even when no apps are running.\n          </DialogContentText> */}\n            <Grid container>\n              <Grid item container lg={12} md={12}>\n                <Grid md={4} > <label>Remaining balance</label></Grid>\n                <Grid md={8}><label>&#8377;&nbsp;{this.props.paidDetails?.totalAmd}</label></Grid>\n              </Grid>\n              <Grid item container lg={12} md={12}>\n\n                <TextField\n                  id=\"Advance\"\n                  label=\"&#8377; &nbsp;Advance\"\n                  type=\"number\"\n                  // title=\"Enter in rupees\"\n                  helperText={this.state?.advanceError ? this.state?.advanceErrorMsg : ''}\n                  error={this.state?.advanceError ? true : false}\n                  autoComplete=\"current-password\"\n                  margin=\"normal\"\n                  onInput={(e) => {\n                    e.target.value = Math.max(0, parseInt(e.target.value)).toString()\n                  }}\n                  variant=\"outlined\"\n                  value={this.state.advance}\n                  // onChange={(e) => setPaidDetail({ advance: e.target.value })}\n                  onChange={(e) => this.advanceChange(e.target.value)}\n                  // disabled={data.type === \"current\" ? see1 : see}\n                  style={{ width: '100%' }}\n                />\n              </Grid>\n              <Grid item container lg={12} md={12}>\n                {/* <Grid item xs={12} lg={12} md={12}> */}\n                <TextField\n                  id=\"outlined-multiline-static\"\n                  label=\"Advance Description\"\n                  helperText={this.state?.descriptionError ? this.state?.descriptionErrorMsg : ''}\n                  error={this.state?.descriptionError ? true : false}\n                  multiline\n                  rows=\"3\"\n                  style={{ width: '100%' }}\n                  autoComplete=\"new-multiline-static\"\n                  inputProps={{\n                    maxLength: 2000,\n                  }}\n                  value={this.state.description}\n                  margin=\"dense\"\n                  variant=\"outlined\"\n                  // disabled={data.see}\n                  onChange={(e) => this.handleChange(e.target.value)}\n\n                />\n\n                {/* </Grid> */}\n              </Grid>\n            </Grid>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={this.handleSave} color=\"primary\">\n              Save\n          </Button>\n            <Button onClick={this.handleClose} color=\"primary\" autoFocus>\n              Cancel\n          </Button>\n          </DialogActions>\n        </Dialog>\n      </div>\n    );\n  }\n\n}\n\n\nclass EnhancedTable extends React.Component {\n\n  handleRequestSort = (event, property) => {\n    const orderBy = property;\n    let order = 'desc';\n\n    if (this.state.orderBy === property && this.state.order === 'desc') {\n      order = 'asc';\n    }\n\n    const data =\n      order === 'desc'\n        ? this.state.data.sort((a, b) => (b[orderBy] < a[orderBy] ? -1 : 1))\n        : this.state.data.sort((a, b) => (a[orderBy] < b[orderBy] ? -1 : 1));\n\n    this.setState({ data, order, orderBy });\n  };\n  handleSelectAllClick = (event, checked) => {\n    if (this.state.unmounted) return;\n\n    if (checked) {\n      this.setState({ selected: this.state.data.map(n => n.id) });\n      return;\n    }\n    this.setState({ selected: [] });\n  };\n  handleKeyDown = (event, id) => {\n    if (keycode(event) === 'space') {\n      this.handleClick(event, id);\n    }\n  };\n  handleClick = (event, id) => {\n    const { selected } = this.state;\n    const selectedIndex = selected.indexOf(id);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, id);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1),\n      );\n    }\n    if (this.state.unmounted) return;\n\n    this.setState({ selected: newSelected });\n  };\n  handleChangePage = (event, page) => {\n    if (this.state.unmounted) return;\n\n    let off_set = page * this.state.rowsPerPage\n    this.setState({ page, offset: off_set });\n    // setPage(newPage);\n    // setOffsetValue(newPage*rowsPerPage)\n\n  };\n\n  handleChangeRowsPerPage = event => {\n    if (this.state.unmounted) return;\n\n    this.setState({ rowsPerPage: parseInt(event.target.value, 10), page: 0 });\n    // setRowsPerPage(parseInt(event.target.value, 10));\n    // setPage(0);\n\n  };\n  isSelected = id => this.state.selected.indexOf(id) !== -1;\n\n  handleChange = async (id, refetch, e, leadData, payment_data) => {\n    const authContext = this.context;\n    let variables = {\n      id,\n      status: e\n    }\n    if (leadData?.projectQuoteByFinalQuoteId?.totalAmt === undefined && (e === \"QUOTECONFIRMED\" || e === \"QUOTEFINAL\" || e === \"ADVANCEDPAID\")) {\n      this.props.alertOpenBox({ open: true, content: \"Please update Final Quote details to make this change.\", status: \"info\" })\n      return;\n    }\n    if (e === \"ADVANCEDPAID\") {\n      if (this.state.unmounted) return;\n\n      this.setState({\n        advance_paid_status_value: variables\n      })\n      this.paidAlertOpen(payment_data);\n\n    }\n    if (e !== \"ADVANCEDPAID\") {\n      this.props.client.mutate({ mutation: STATUS_UPDATE_IN_PROJECT, variables })\n        .then(res => {\n          if (res !== null) {\n            let statusData = this.state.AdminStatus;\n            let prevStatus = \"\";\n            let nextStatus = \"\";\n            statusData.map(obj => {\n              if (variables.status === obj.value) {\n                nextStatus = obj.label;\n              }\n              if (leadData.status === obj.value) {\n                prevStatus = obj.label;\n              }\n              return obj;\n            })\n            let msg_info = {\n              id: uuidv4(),\n              sender_id: authContext.user.profile_id,\n              created_at: new Date(),\n              updated_at: new Date(),\n              project_id: id,\n              mode: \"status updated\",\n              message: `${authContext.user.name} changed status to \"${nextStatus}\" from \"${leadData.status ? prevStatus : leadData}\"`,\n              is_internal: false\n            }\n            this.props.snackBarOpen({ color: \"success\", message: \"You have updated Lead status successfully.\" });\n            // if(e===\"ADVANCEDPAID\"){\n            //   this.paidAlertOpen({id:leadData.projectQuoteByFinalQuoteId?.id,advance:leadData?.projectQuoteByFinalQuoteId?.advanceReceived ,total:leadData?.projectQuoteByFinalQuoteId?.totalAmt,status:leadData?.status})\n            // }\n            axios.post(GRAPHQL_URL, { query: CREATE_COMMUNICATION, variables: msg_info })\n              .then(msg_res => {\n                if (this.state.unmounted) return;\n\n                if (msg_res) {\n                  this.props.quoteFinalMethod();\n                  this.props.followUpMethod();\n                  this.props.onHoldMethod();\n                  this.props.delayedMethod();\n                  this.props.alertCancel();\n                  refetch()\n                }\n              })\n              .catch(err => {\n                console.log(err)\n              })\n          }\n        })\n    }\n\n  }\n  sendProjectId = (id) => {\n    // alert('enhanced table')\n    // contextValue.user.customer_id = id\n    // contextValue.setAuth({\n    //   ...contextValue.user\n    // })\n    this.props.history.push(`/app/lead-quote-gen/${id}`)\n  }\n\n\n\n  constructor(props, context) {\n    super(props, context);\n\n    this.state = {\n      unmounted:false,\n      paidAlertOpen: false,\n      paidDetails: {},\n      order: 'asc',\n      orderBy: 'LeadId',\n      orderByFilter: 'CREATED_AT_DESC',\n      filterSearch: '',\n      selected: [],\n      FinanceLeadStatus: [\n        {\n          value: 'QUOTECONFIRMED',\n          label: 'Quote Confirmed',\n        },\n        {\n          value: 'ADVANCEDPAID',\n          label: 'Advance Paid',\n        },\n      ],\n      LeadStatus: [\n        {\n          value: 'CAPTURED',\n          label: 'Captured',\n        },\n        {\n          value: 'FOLLOWUP',\n          label: 'Follow-Up',\n        },\n        {\n          value: \"QUOTESENT\",\n          label: \"Quote Sent\"\n        },\n        {\n          value: 'NEGOTIATION',\n          label: 'Negotiation',\n        },\n        {\n          value: 'QUOTEFINAL',\n          label: 'Quote Final',\n        },\n        {\n          value: 'QUOTECONFIRMED',\n          label: 'Quote Confirmed',\n        },\n        {\n          value: 'ONHOLD',\n          label: 'On Hold',\n        },\n        {\n          value: 'DELAYED',\n          label: 'Delayed',\n        },\n        {\n          value: 'CANCELLED',\n          label: 'Cancelled',\n        },\n      ],\n      AdminStatus: [],\n      page: 0,\n      rowsPerPage: 5,\n      offset: 0,\n      totalCount: 0,\n      customerStatus: 'CAPTURED'\n\n    };\n  }\n  listEventType = (eventTypeValue) => {\n    let setValue = '';\n    eventTypeValue = eventTypeValue?.map((data, index) => {\n      if (eventTypeValue.length - 1 === index) {\n        setValue = setValue + data.masterEventByEventId?.eventName;\n      } else {\n        setValue = setValue + data.masterEventByEventId?.eventName + \", \";\n      }\n      return data;\n    })\n    return setValue;\n  }\n  statusCancel = (id, refetch, e, data) => {\n    let btnAction = e\n    let params = {\n      id: JSON.parse(JSON.stringify(id))\n      ,\n      refetch,\n      btnAction,\n      data: JSON.parse(JSON.stringify(data))\n    }\n    if (e === \"CANCELLED\") {\n      this.props.alertOpenBox({ open: true, content: \"Are you sure you want to cancel this Lead?\", status: \"info\", twoBtn: true })\n    }\n    if (this.state.unmounted) return;\n\n    this.setState({\n      cancelStatusData: params\n    })\n  }\n  componentDidMount() {\n    let state = this.state;\n    if (this.state.unmounted === false) {\n      this.setState({\n        AdminStatus: [...state.LeadStatus, {\n          value: 'ADVANCEDPAID',\n          label: 'Advance Paid',\n        }]\n      })\n\n    }\n  }\n  // shouldComponentUpdate(nextProps, nextState){\n  //   // if(this.props.alertAction)\n  //     // if(nextProps.state.alertAction){\n  //     //   this.handleChange(this.state.cancelStatusData.id,this.state.cancelStatusData.refetch,this.state.cancelStatusData.e,this.state.cancelStatusData.data)\n  //     // }\n  //     return false;\n  // }\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.state.alertAction) {\n      this.handleChange(this.state.cancelStatusData.id, this.state.cancelStatusData.refetch, this.state.cancelStatusData.btnAction, this.state.cancelStatusData.data)\n    }\n  }\n  paidAlertOpen = (params) => {\n    // if(params?.status===\"ADVANCEDPAID\") {\n    if (this.state.unmounted) return;\n\n    params.totalAmd = Number(params.total) - (params?.advance ? Number(params.advance) : 0)\n    this.setState({\n      paidAlertOpen: true,\n      paidDetails: params\n    })\n    // }else{\n    //   this.props.alertOpenBox({ open: true, content: \"Please update Advance Paid details to make this change.\", status: \"info\" })\n    // }\n\n  }\n  paidAlertClose = () => {\n    if (this.state.unmounted) return;\n\n    this.setState({\n      paidAlertOpen: false,\n    })\n    this.props.history.push(`/app/all-leads`)\n  }\n  // handleSearch = name => event => {\n  //   this.setState({\n  //     filterSearch:event.target.value\n  //   });\n  // }\n  statusSort = () => {\n    let orderByFilter = '';\n    if(this.state.orderByFilter==='CREATED_AT_DESC'){\n      orderByFilter = 'STATUS_ASC';\n    } else if (this.state.orderByFilter === 'STATUS_ASC') {\n      orderByFilter = 'STATUS_DESC';\n    } else if(this.state.orderByFilter === 'STATUS_DESC') {\n      orderByFilter = 'STATUS_ASC';\n    }\n    this.setState({\n      orderByFilter\n    });\n  }\n  render() {\n    const contextValue = this.context;\n    const { rowsPerPage, page, LeadStatus, FinanceLeadStatus } = this.state;\n\n\n\n    return (\n      <div>\n        <AlertDialog open={this.state.paidAlertOpen} {...this.state} paidAlertClose={this.paidAlertClose} paidDetails={this.state.paidDetails} />\n        <div className=\"flex-auto\" >\n          <div className=\"table-responsive-material\">\n            {/* <ReactTableContainer  height=\"460px\" customHeader={[TableHead]} customFooter={[TableFooter]}      style={{\n          // Removes `inline-block` space between <Paper> and <ReactTableContainer>\n          marginBottom: \"-4px\"\n        }} > */}\n            {/* <Grid container item>\n              <Grid item xs={6} md={8} lg={8}></Grid>\n              <Grid item xs={6} md={4} lg={4} style={{    padding: \"10px 20px 5px 10px\"}}>\n              <TextField\n                // \n                // pattern=\"[0-9]{2}\"\n                // onInvalid={this.handleInvalid('customerName')}\n                // helperText={this.state.error.name ? this.state.errorMsg.name : ''}\n                // error={this.state.error.name ? true : false}\n                id=\"outlined-password-input\"\n                label=\"Search by lead Id, contact name, phone number\"\n                style={{ width: '100%' }}\n                type=\"text\"\n                // title=\"text inputs only allowed\"\n                autoComplete=\"new-password\"\n                margin=\"dense\"\n                variant=\"outlined\"\n                inputProps={{\n                  maxLength: 60,\n                  style: { color: \"rgba(0, 0, 0, 0.7)\", fontSize: \"14px\" }\n                }}\n                // className={this.props.className}\n                value={this.state.filterSearch}\n                onChange={this.handleSearch('search')}\n              />\n              </Grid>\n            </Grid> */}\n            <Table >\n              <TableHead style={{ fontSize: '18rem !important', backgroundColor: 'white' }} >\n                <TableRow >\n                  <TableCell className=\"padspace\" align=\"center\" style={{ height: \"50px\" }} >Lead Id</TableCell>\n                  <TableCell className=\"padspace\" align=\"center\" style={{minWidth: 150}} >Lead Date</TableCell>\n                  <TableCell className=\"padspace\" align=\"center\" style={{minWidth: 150}}>Customer</TableCell>\n                  <TableCell className=\"padspace\" align=\"center\" style={{minWidth: 150}}>Contact Number</TableCell>\n                  {/* <TableCell className=\"padspace\" align=\"center\" >Event Date</TableCell> */}\n                  <TableCell className=\"padspace\" align=\"center\" style={{minWidth: 200}} >Event Type</TableCell>\n                  <TableCell className=\"padspaceStatus\" align=\"center\"  ><TableSortLabel active=\"true\" direction={this.state.orderByFilter===\"CREATED_AT_DESC\"?'desc':this.state.orderByFilter===\"STATUS_DESC\"?'desc':'asc'} onClick={()=>this.statusSort()}>Status</TableSortLabel></TableCell>\n                  {/* <TableCell className=\"padspace\" align=\"center\" >Quote</TableCell> */}\n                  <TableCell className=\"padspace\" align=\"center\" style={{minWidth: 150}}>Final Quote</TableCell>\n                  {\n                    contextValue.user.user_role === 5 || contextValue.user.user_role === 1 ?\n                      <>\n                        <TableCell className=\"padspace\" align=\"center\" style={{minWidth: 150}}>Advance payment</TableCell>\n                        <TableCell className=\"padspace\" align=\"center\" style={{minWidth: 150}}>Remaining balance</TableCell>\n                        <TableCell className=\"padspace\" align=\"center\" style={{minWidth: 200}} >Payment description</TableCell>\n\n\n                        {/* <TableCell className=\"padspace\" align=\"center\" >Action</TableCell>  */}\n                      </>\n                      : \"\"\n                  }\n                  <TableCell className=\"padspace\" align=\"center\" style={{minWidth: 200}}>Follow up date</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody className=\"padspace\" >\n                {\n                  contextValue.user.user_role === 5 || contextValue.user.user_role === 1 ?\n                    <Query\n                      query={contextValue.user.user_role === 5 ? FINANCE_CUSTOMER_DATA : ADMINACCESSCUSTOMERDATA}\n                      fetchPolicy=\"no-cache\"\n                      onCompleted={data => { if (this.state.unmounted) return; this.props.handleTotalCount(data.allProjects.totalCount) }}\n                      variables={{ \"first\": this.props.rowsPerPage, \"offset\": this.props.offset, \"search\": this.props.filterSearch, \"orderBy\": this.state.orderByFilter }}>\n                      {\n                        ({ data, loading, error, refetch }) => {\n\n                          if (loading) {\n                            return <TableRow><TableCell></TableCell><TableCell></TableCell><TableCell></TableCell><TableCell></TableCell><TableCell></TableCell><TableCell>{<CircularProgress />}</TableCell> </TableRow>\n                          }\n                          if (error) {\n                            return <div>{error}</div>\n                            // return false \n                          }\n                          if (data) {\n                            if (data?.allProjects?.nodes.length > 0) {\n                              return <>\n                                {data.allProjects && data.allProjects.nodes && data.allProjects.nodes.map((row, index) => (\n                                  <TableRow key={row.id}  >\n                                    <TableCell align=\"center\" className='padspace btn-format' style={{ padding: \"7px 13px 7px 16px !important\" }}>\n                                      <Button style={{ backgroundColor: '#3f51b5', color: 'white' }} onClick={() => this.sendProjectId(row && row.customerByCustomerId?.id)}>{row?.customerByCustomerId?.serialNo}</Button>\n                                    </TableCell>\n                                    <TableCell align=\"center\" className=\"padspace\">{moment(row && row.createdAt).format('Do MMMM YYYY')}</TableCell>\n                                    <TableCell align=\"center\" className=\"padspace\">{row && row.customerByCustomerId?.name}</TableCell>\n                                    <TableCell align=\"center\" className=\"padspace\">{row && row.customerByCustomerId?.mobile.split(\" \")[0]}</TableCell>\n                                    {/* <TableCell align=\"center\" className=\"padspace\">{moment(row.projectsByCustomerId.nodes[0]&&row.projectsByCustomerId.nodes[0].eventDate).format('MMMM Do YYYY')}</TableCell> */}\n                                    <TableCell align=\"center\" className=\"padspace\">{this.listEventType(row?.customerByCustomerId?.projectEventsByCustomerId?.nodes)}</TableCell>\n                                    <TableCell align=\"center\" style={{ textAlign: \"left\", fontSize: '0.8125rem', fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif', fontWeight: '400', padding: 0 }} className=\"statusBoxWidth selectBoxHeight\">\n                                      {\n                                        contextValue.user.user_role === 5 && row?.status === \"ADVANCEDPAID\" ? <>Advanced Paid</> :\n                                          <TextField\n                                            id=\"outlined-select-currency-native\"\n                                            select\n                                            label=\"Choose Status\"\n\n                                            value={row?.status}\n                                            onChange={(e) => this.handleChange(row?.id, refetch, e.target.value, row, { id: row.projectQuoteByFinalQuoteId?.id, advance: row?.projectQuoteByFinalQuoteId?.advanceReceived, total: row?.projectQuoteByFinalQuoteId?.totalAmt, status: row?.status, description: row?.projectQuoteByFinalQuoteId?.description })}\n                                            SelectProps={{\n                                              native: true,\n                                            }}\n                                            inputProps={{\n                                              style: { padding: \"6px 15px 4px 10px\", fontSize: \"14px\" }\n                                            }}\n                                            margin=\"normal\"\n                                            variant=\"outlined\"\n                                            style={{ width: '100%', margin: \"0px\" }}\n                                            disabled={data.see}\n                                            required\n                                          >\n                                            {\n                                              contextValue.user.user_role === 5 ? FinanceLeadStatus.map(option => (\n                                                <option key={option.value} disabled={option.value === \"CAPTURED\" ? true : false} value={option.value}>\n                                                  {option.label}\n                                                </option>\n                                              )) : this.state.AdminStatus.map(option => (\n                                                <option key={option.value} value={option.value}>\n                                                  {option.label}\n                                                </option>\n                                              ))\n                                            }\n                                          </TextField>\n                                      }\n\n\n                                    </TableCell>\n                                    {/* <TableCell align=\"center\" className=\"padspace2 btnPad\">            \n                \n               \n              <Button id=\"Send Quote\" className={\"btnSmall\"} onClick={()=>this.sendProjectId(row&&row.id)} style={{ backgroundColor: '#3f51b5', color: 'white' }} >Send Quote </Button>\n  \n              </TableCell> */}\n                                    <TableCell align=\"center\" className=\"padspace\">{row?.projectQuoteByFinalQuoteId?.totalAmt ? <span class=\"spanRupee\">{numberFormat(row?.projectQuoteByFinalQuoteId?.totalAmt)}</span> : \"---\"}</TableCell>\n                                    <TableCell align=\"center\" className=\"padspace\">{row?.projectQuoteByFinalQuoteId?.advanceReceived ? <span class=\"spanRupee\">{numberFormat(row?.projectQuoteByFinalQuoteId?.advanceReceived)}</span> : \"---\"}</TableCell>\n                                    <TableCell align=\"center\" className=\"padspace\">{row?.projectQuoteByFinalQuoteId?.totalAmt ? <span class=\"spanRupee\">{numberFormat(Number(row?.projectQuoteByFinalQuoteId?.totalAmt) - (row?.projectQuoteByFinalQuoteId?.advanceReceived ? Number(row?.projectQuoteByFinalQuoteId?.advanceReceived) : 0))}</span> : \"---\"}</TableCell>\n                                    <TableCell align=\"center\" className=\"padspace\">{row?.projectQuoteByFinalQuoteId?.description}</TableCell>\n                                    <TableCell align=\"center\" className=\"padspace\">{row?.customerByCustomerId?.followUpDate === null ? '---' : moment(row?.customerByCustomerId?.followUpDate).format('Do MMMM YYYY, h:mm a')}</TableCell>\n\n\n                                    {/* <TableCell align=\"center\" className='padspace'>\n            <Button style={{ backgroundColor: '#3f51b5', color: 'white' }} onClick={() => this.paidAlertOpen({id:row.projectQuoteByFinalQuoteId?.id,advance:row?.projectQuoteByFinalQuoteId?.advanceReceived ,total:row?.projectQuoteByFinalQuoteId?.totalAmt,status:row?.status,description:row?.projectQuoteByFinalQuoteId?.description})}>{\"Edit\"}</Button>\n                                  </TableCell> */}\n                                  </TableRow>\n                                ))}\n                              </>\n                            } else {\n                              return <TableRow><TableCell></TableCell><TableCell></TableCell><TableCell></TableCell><TableCell></TableCell><TableCell></TableCell><TableCell></TableCell><TableCell style={{ width: \"100%\", textAlign: \"center\" }}>You don't have leads.</TableCell> </TableRow>\n                            }\n                          }\n                          else {\n                            return <div>data:{data}</div>\n                          }\n                        }}\n                    </Query> : <Query\n                      query={ADMINACCESSCUSTOMERDATA}\n                      fetchPolicy=\"no-cache\"\n                      onCompleted={data => { if (this.state.unmounted) return; this.props.handleTotalCount(data.allProjects.totalCount) }}\n                      variables={{ \"first\": this.props.rowsPerPage, \"offset\": this.props.offset, \"search\": this.props.filterSearch, \"orderBy\": this.state.orderByFilter }}>\n                      {\n                        ({ data, loading, error, refetch }) => {\n\n                          if (loading) {\n                            return <TableRow><TableCell></TableCell><TableCell></TableCell><TableCell></TableCell><TableCell>{<CircularProgress />}</TableCell> </TableRow>\n                          }\n                          if (error) {\n                            return <div>{error}</div>\n                            // return false\n                          }\n                          if (data) {\n                            if (data?.allProjects?.nodes.length > 0) {\n                              return <>\n                                {data.allProjects && data.allProjects.nodes && data.allProjects.nodes.map((row, index) => (\n                                  <TableRow key={row.id} className=\"padspace\" >\n                                    <TableCell align=\"center\" style={{ padding: \"14px 0px !important\" }}>\n                                      <Button style={{ backgroundColor: '#3f51b5', color: 'white' }} onClick={() => this.sendProjectId(row && row.customerByCustomerId?.id)}>{row?.customerByCustomerId?.serialNo}</Button>\n                                    </TableCell>\n                                    <TableCell align=\"center\" className=\"padspace\">{moment(row && row.createdAt).format('Do MMMM YYYY')}</TableCell>\n                                    <TableCell align=\"center\" className=\"padspace\">{row && row.customerByCustomerId?.name}</TableCell>\n                                    <TableCell align=\"center\" className=\"padspace\">{row && row.customerByCustomerId?.mobile.split(\" \")[0]}</TableCell>\n                                    {/* <TableCell align=\"center\" className=\"padspace\">{moment(row.projectsByCustomerId.nodes[0]&&row.projectsByCustomerId.nodes[0].eventDate).format('MMMM Do YYYY')}</TableCell> */}\n                                    <TableCell align=\"center\" className=\"padspace\">{this.listEventType(row?.customerByCustomerId?.projectEventsByCustomerId?.nodes)}</TableCell>\n                                    <TableCell align=\"center\" className=\"padspace\" style={{ textAlign: \"left\", fontSize: '0.8125rem', fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif', fontWeight: '400', paddingRight: \"106px !important\", paddingTop: \"7px !important\" }}>\n                                      {\n                                        row?.status === \"ADVANCEDPAID\" ? <>Advanced Paid</> :\n                                          <>\n                                            <Grid container className=\"statusBoxWidth\">\n                                              <Grid item className=\"selectBoxHeight\">\n                                                <TextField\n                                                  id=\"outlined-select-currency-native\"\n                                                  select\n                                                  label=\"Choose Status\"\n\n                                                  value={row?.status}\n                                                  onChange={(e) => e.target.value === \"CANCELLED\" ? this.statusCancel(row?.id, refetch, e.target.value, row) : this.handleChange(row?.id, refetch, e.target.value, row)}\n                                                  SelectProps={{\n                                                    native: true,\n                                                  }}\n                                                  inputProps={{\n                                                    style: { padding: \"6px 15px 4px 10px\", fontSize: \"14px\" }\n                                                  }}\n                                                  margin=\"normal\"\n                                                  variant=\"outlined\"\n                                                  // style={{ width: '100%' }}\n                                                  // disabled={row.projectsByCustomerId.nodes[0] && row.projectsByCustomerId.nodes[0].status === \"ADVANCEDPAID\" ? true : false}\n                                                  required\n                                                >\n                                                  {LeadStatus.map(option => (\n                                                    <option key={option.value} disabled={option.value === \"CAPTURED\" ? true : false} value={option.value}>\n                                                      {option.label}\n                                                    </option>\n                                                  ))}\n                                                </TextField>\n                                              </Grid>\n                                            </Grid>\n\n                                          </>\n                                      }\n                                    </TableCell>\n                                    {/* <TableCell align=\"center\" className=\"padspace2 btnPad\">            \n                \n               \n              <Button id=\"Send Quote\" className={\"btnSmall\"} onClick={()=>this.sendProjectId(row&&row.id)} style={{ backgroundColor: '#3f51b5', color: 'white' }} >Send Quote </Button>\n  \n              </TableCell> */}\n                                    <TableCell align=\"center\" className=\"padspace\">{row?.projectQuoteByFinalQuoteId?.totalAmt ? <span class=\"spanRupee\">{numberFormat(row?.projectQuoteByFinalQuoteId?.totalAmt)}</span> : \"---\"}</TableCell>\n                                    <TableCell align=\"center\" className=\"padspace\">{row?.customerByCustomerId?.followUpDate === null ? '---' : moment(row?.customerByCustomerId?.followUpDate).format('Do MMMM YYYY, h:mm a')}</TableCell>\n\n                                  </TableRow>\n                                ))}\n                              </>\n                            } else {\n                              return <TableRow><TableCell></TableCell><TableCell></TableCell><TableCell></TableCell><TableCell></TableCell><TableCell>You don't have leads.</TableCell> </TableRow>\n                            }\n                          }\n                          else {\n                            return <div>data:{data}</div>\n                          }\n                        }}\n                    </Query>\n                }\n              </TableBody>\n              {/* <TableFooter className=\"padspace\">\n                <TableRow className=\"padspace\">\n                  <TablePagination className=\"padspace\"\n                    count={this.state.totalCount}\n\n                    rowsPerPage={rowsPerPage}\n                    rowsPerPageOptions={[]} //to remove rows per page pagination\n                    page={page}\n                    onChangePage={this.handleChangePage}\n                    onChangeRowsPerPage={this.handleChangeRowsPerPage}\n                  />\n                </TableRow>\n              </TableFooter> */}\n            </Table>\n            {/* </ReactTableContainer> */}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nEnhancedTable.contextType = AuthContext;\nexport default withApollo(withRouter(EnhancedTable));","import React,{ useState } from 'react';\n\nimport EnhancedTable from './enhanced/EnhancedTable';\n// import ContainerHeader from 'components/ContainerHeader/index';\nimport CardBox from 'components/CardBox/index';\nimport IntlMessages from 'util/IntlMessages';\nimport \"index.css\";\nimport { Grid, TextField } from '@material-ui/core';\nimport TablePagination from '@material-ui/core/TablePagination';\n\nconst Tables = (props) => {\n  const [ search,setSearch ] = useState(\"\");\n  const [ page,setPage ] = useState(0);\n  const [rowsPerPage,setRowsPerPage ]= useState(5);\n  const [offset,setOffset ] = useState(0);\n  const [totalCount, setTotalCount ] = useState(0);\n  let handleSearch = name => event =>{\n    setSearch(event.target.value);\n    setPage(0);\n    setOffset(0);\n  }\n  let handleChangePage =(event, pages) => {\n    // if (this.state.unmounted) return;\n\n    let off_set = pages * rowsPerPage\n    setPage(pages);\n    setOffset(off_set)\n\n  };\n  let handleTotalCount = (count) =>{\n    setTotalCount(count)\n  };\n  return (\n    <div className=\"animated slideInUpTiny animation-duration-3\">\n      \n\n      {/* <div className=\"row mb-md-3\">\n        <CardBox styleName=\"col-12\" cardStyle=\"p-0\" heading={<IntlMessages id=\"Leads\"/>}\n                 headerOutside>\n          <BasicTable/>\n        </CardBox>\n      </div> */}\n\n      <div className=\"row searchBoxPadding\" >\n        <CardBox styleName=\"col-12\"     cardStyle=\"p-0\"\n                 headerOutside>\n          <Grid container item >\n              <Grid item xs={6} md={8} lg={8} style={{fontSize:\"17px\"}}>\n              <div className=\"trest\"><IntlMessages id=\"Leads\"/></div>\n              </Grid>\n              <Grid item xs={6} md={4} lg={4}>\n              <TextField\n                // \n                // pattern=\"[0-9]{2}\"\n                // onInvalid={this.handleInvalid('customerName')}\n                // helperText={this.state.error.name ? this.state.errorMsg.name : ''}\n                // error={this.state.error.name ? true : false}\n                id=\"outlined-password-input\"\n                label=\"Search by lead Id, contact name, phone number\"\n                style={{ width: '100%' }}\n                type=\"text\"\n                // title=\"text inputs only allowed\"\n                autoComplete=\"new-password\"\n                margin=\"dense\"\n                variant=\"outlined\"\n                inputProps={{\n                  maxLength: 60,\n                  style: { color: \"rgba(0, 0, 0, 0.7)\", fontSize: \"14px\",background:\"white\" }\n                }}\n                // className={this.props.className}\n                value={search}\n                onChange={handleSearch('search')}\n              />\n              </Grid>\n              {/* <Grid item xs={12} md={12} lg={12}>\n              <EnhancedTable filterSearch={search} {...props}/>\n              </Grid> */}\n            </Grid>\n      \n            <Grid item>\n               <EnhancedTable handleTotalCount={handleTotalCount} offset={offset} rowsPerPage={rowsPerPage} filterSearch={search} {...props}/>\n\n            </Grid>\n            <TablePagination \n                    count={totalCount}\n                    component=\"div\"\n                    rowsPerPage={rowsPerPage}\n                    rowsPerPageOptions={[]} //to remove rows per page pagination\n                    page={page}\n                    onChangePage={handleChangePage}\n                    // onChangeRowsPerPage={this.handleChangeRowsPerPage}\n                  />\n        </CardBox> \n      </div>\n    </div>\n  );\n};\n\nexport default Tables;\n\n","import React from 'react';\n// import RemindersToFollowUp from './RemindersToFollowUp';\n// import RemindersForQuoteGen from './RemindersForQuoteGen';\nimport Tables from 'tables'\n// import {\n//   announcementsNotification,\n//   appNotification,\n//   announcements,\n//   remindersToFollowUp,\n//   remindersForQuoteGen,\n//   remindersForAlbumSelection,\n//   remindersForCustomerReview,\n//   remindersForAlbumComplete,\n// } from './data';\nimport AlertDialog from '../../../components/AlertBox/alertbox';\nimport CustomizedSnackbars from '../../../components/snackbar/index';\nimport { Grid } from '@material-ui/core';\nimport CardsTable from './cardsTable/enhanced/CardsTable'\nimport CardLayout from \"./CardLayout/index\";\nimport * as axios from 'axios';\nimport { API_URL } from '../../../config/index';\n// import { USERPROFILEFOLLOWUPSTATUS, USERPROFILEFINALQUOTESTATUS, USERPROFILEONHOLDSTATUS,USERPROFILEDELAYEDSTATUS } from '../../../services/grapgql/mutation';\nimport { AuthContext } from '../../../context/auth';\n// let counter = 0;\n\n// function createData(leadId, leadDate, leadName, leadNum, EventDate, EventType, Quote, FinalQuote) {\n//   counter += 1;\n//   return { id: counter, leadId, leadDate, leadName, leadNum, EventDate, EventType, Quote, FinalQuote };\n// }\nclass AllLeads extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      unmounted: false,\n      snackBarOpen: false,\n      snackbarMessage: \"\",\n      snackbarColor: \"\",\n      alertTwoBtn: false,\n      alertContent: \"\",\n      alertStatus: \"\",\n      alertAction: false,\n      alertOpen: false,\n      followUpData: [],\n      quoteFinal: [],\n      onHoldData: [],\n      delayedData: [],\n      dataFour: [],\n      dataFive: [],\n      LeadStatusOne: [\n        {\n          value: 'AlbumSelection',\n          label: 'Album Selection',\n        },\n        {\n          value: 'PhotoshopOnly',\n          label: 'Photoshop Only',\n        },\n\n      ],\n      LeadStatusTwo: [\n        {\n          value: 'CustomerReview',\n          label: 'Customer Review',\n        },\n        {\n          value: 'CustomerOk',\n          label: 'Customer Okay',\n        },\n        {\n          value: 'CustomerNotOk',\n          label: 'Customer Not Okay',\n        },\n      ],\n\n    };\n  }\n  componentDidMount() {\n    // let authContext = this.context;\n    // let followUpData = [];\n    // let quoteFinal = [];\n    // axios.post(GRAPHQL_URL, { query: USERPROFILEFOLLOWUPSTATUS, variables: { id: authContext?.user?.profile_id } })\n    //   .then(follow_res => {\n    //     followUpData = follow_res.data?.data?.userProfileById?.customersByCreatedBy?.nodes;\n    //     this.setState({\n    //       followUpData\n    //     })\n    //   })\n    // axios.post(GRAPHQL_URL, { query: USERPROFILEFINALQUOTESTATUS, variables: { id: authContext?.user?.profile_id } })\n    //   .then(quotefinal_res => {\n    //     quoteFinal = quotefinal_res.data?.data?.userProfileById?.customersByCreatedBy?.nodes;\n    //     this.setState({\n    //       quoteFinal\n    //     })\n    //   })\n    this.followUpMethod();\n    this.quoteFinalMethod();\n    this.onHoldMethod();\n    this.delayedMethod();\n  }\n  componentWillUnmount() {\n    this.setState({\n      unmounted: true\n    });\n\n  }\n  quoteFinalMethod = async () => {\n    // let authContext = this.context;\n\n    let quoteFinal = [];\n    await axios.post(`${API_URL}/api/v1/sort/remaindersort`, { status: \"QUOTEFINAL\" })\n      .then(quotefinal_res => {\n        if (this.state.unmounted) return;\n        quoteFinal = quotefinal_res?.data?.info;\n        this.setState({\n          quoteFinal\n        })\n      })\n  }\n  followUpMethod = async () => {\n    // let authContext = this.context;\n    let followUpData = [];\n    await axios.get(`${API_URL}/api/v1/sort/followup`)\n      .then(follow_res => {\n        if (this.state.unmounted) return;\n\n        followUpData = follow_res?.data?.info;\n        this.setState({\n          followUpData\n        })\n      })\n  }\n  onHoldMethod = async () => {\n    // let authContext = this.context;\n    let onHoldData = [];\n    await axios.post(`${API_URL}/api/v1/sort/remaindersort`, { status: \"ONHOLD\" })\n      .then(onhold_res => {\n        if (this.state.unmounted) return;\n\n        onHoldData = onhold_res?.data?.info;\n        this.setState({\n          onHoldData\n        })\n      })\n  }\n  delayedMethod = async () => {\n    // let authContext = this.context; \n    let delayedData = [];\n    await axios.get(`${API_URL}/api/v1/sort/delaysortwithexpirefollowupstatus`)\n      .then(delay_res => {\n        if (this.state.unmounted) return;\n\n        delayedData = delay_res?.data?.info;\n        this.setState({\n          delayedData\n        })\n      })\n  }\n  alertClose = () => {\n    if (this.state.unmounted) return;\n\n    this.setState({\n      alertOpen: false\n    })\n  }\n  alertOpenBox = (params) => {\n    let state = this.state;\n    state.alertOpen = params.open;\n    state.alertContent = params.content;\n    state.alertStatus = params.status;\n    if (typeof params?.twoBtn !== \"undefined\") {\n      state.alertTwoBtn = true;\n    }\n    if (this.state.unmounted) return;\n\n    this.setState({\n      ...state\n    });\n  }\n  alertSure = () => {\n    if (this.state.unmounted) return;\n\n    this.setState({\n      alertAction: true,\n      alertOpen: false\n    });\n  }\n  alertCancel = () => {\n    if (this.state.unmounted) return;\n\n    this.setState({\n      alertAction: false,\n      alertOpen: false\n    });\n  }\n  snackBarOpen = (params) => {\n    if (this.state.unmounted) return;\n\n    this.setState({\n      snackBarOpen: true,\n      snackbarColor: params.color,\n      snackbarMessage: params.message\n    })\n  }\n  snackBarClose = () => {\n    let state = this.state;\n    state.snackBarOpen = false;\n    if (this.state.unmounted) return;\n\n    this.setState({\n      ...state\n\n    })\n  }\n  render() {\n    let { followUpData } = this.state;\n    let { quoteFinal } = this.state;\n    let { onHoldData } = this.state;\n    let { delayedData } = this.state;\n    let authContext = this.context;\n\n    // let { dataFive } = this.state;\n    // let { LeadStatusOne } = this.state;\n    // let { LeadStatusTwo } = this.state;\n\n    return (\n      <div>\n\n\n        <div className=\"app-wrapper\" >\n          <CustomizedSnackbars open={this.state.snackBarOpen} color={this.state.snackbarColor} message={this.state.snackbarMessage} snackBarClose={this.snackBarClose} />\n          <AlertDialog alertOpen={this.state.alertOpen} alertSure={this.alertSure} alertCancel={this.alertCancel} alertClose={this.alertClose} alertContent={this.state.alertContent} alertStatus={this.state.alertStatus} twoBtn={this.state.alertTwoBtn} />\n          <Tables {...this} />\n          {\n            authContext?.user?.user_role === 5 ? \"\" :\n              <Grid item container justify=\"space-around\"\n                alignItems=\"center\" >\n                <Grid item container justify=\"space-around\"\n                  alignItems=\"center\" spacing={1}>\n                  <Grid item xs={12} lg={6} >\n\n\n\n                    <CardLayout styleName=\"col-lg-12\" >\n\n                      <CardsTable stylesdropdown=\"none\" stylesdropdown2=\"none\" cardsTableHeight='525px' {...this.props} datas={followUpData} tableHeading={'Reminders for Follow-Up'} navlinks={'lead-quote-gen#commentBox'} buttonName={'Follow-Up'} />\n                    </CardLayout>\n\n\n                  </Grid>\n                  <Grid item xs={12} lg={6} >\n\n\n                    <CardLayout styleName=\"col-lg-12\">\n\n                      <CardsTable stylesdropdown=\"none\" stylesdropdown2=\"none\" cardsTableHeight='525px' {...this.props} datas={delayedData} tableHeading={'Reminders for Delayed'} buttonName={'View'} />\n                    </CardLayout>\n\n\n                  </Grid>\n                </Grid>\n                <Grid item container justify=\"space-around\"\n                  alignItems=\"center\" spacing={1}>\n                  <Grid item xs={12} lg={6} >\n\n\n\n                    <CardLayout styleName=\"col-lg-12\" >\n\n                      <CardsTable stylesdropdown=\"none\" stylesdropdown2=\"none\" cardsTableHeight='525px' {...this.props} datas={quoteFinal} tableHeading={'Reminders for Quote Final'} navlinks={'send-quote'} buttonName={'View'} />\n                    </CardLayout>\n\n\n\n                  </Grid>\n                  <Grid item xs={12} lg={6}>\n\n\n                    <CardLayout styleName=\"col-lg-12\" >\n\n                      <CardsTable stylesdropdown=\"none\" stylesdropdown2=\"none\" cardsTableHeight='525px' {...this.props} datas={onHoldData} tableHeading={'Reminders for On Hold'} buttonName={'View'} />\n                    </CardLayout>\n\n\n                  </Grid>\n\n\n                </Grid>\n                {/* <Grid item container justify=\"flex-start\"\n              alignItems=\"center\" spacing={1}>\n              <Grid item xs={12} lg={6}>\n\n\n                <CardLayout styleName=\"col-lg-12\">\n\n                  <CardsTable stylesdropdown=\"none\" stylesdropdown2=\"none\" cardsTableHeight='525px' datas={dataFive} tableHeading={'Remainders for Album Complete'} navlinks={'lead-quote-gen#commentBox'} buttonName={'Album Ready'} />\n                </CardLayout>\n\n\n              </Grid>\n\n            </Grid> */}\n              </Grid>\n\n\n          }\n\n\n\n        </div>\n\n      </div>\n    );\n  }\n}\nAllLeads.contextType = AuthContext;\nexport default AllLeads;\n\n\n\n\n\n"],"sourceRoot":""}